{"version":3,"sources":["components/page-loading/PageLoading.module.scss","components/small-box/SmallBox.js","pages/GetUsersCount.js","pages/Products/GetProductsCount.js","pages/Products/GetFeauturedProductsCount.js","pages/Payments/GetPaymentsCount.js","pages/Dashboard.js","components/button/Button.js","components/page-loading/PageLoading.js","pages/ChangePassword/ChangePassword.js","pages/profile/Profile.js","pages/Users/DataTabel.js","pages/Users/getCustomerCount.js","pages/Users/getVendorsCount.js","pages/Users/usersHeader.js","pages/Users/Users.js","pages/Products/EditProductModal.js","pages/Products/ProductsDataTable.js","pages/Products/ProductsHeader.js","pages/Products/ProductsPage.js","pages/Admin/AdminDataTable.js","pages/Admin/AdminPage.js","pages/Slider/ImageUpdate.js","pages/Slider/AddSliderImage.js","pages/Trades/TradesDataTable.js","pages/Trades/GetConfirmedTradesCount.js","pages/Trades/GetTradeRequestCount.js","pages/Trades/GetDeclinedTradesCount.js","pages/Trades/TradesHeader.js","pages/Trades/TradesPage.js","store/actions.js","modules/main/header/user-dropdown/UserDropdown.js","modules/main/header/Header.js","modules/main/footer/Footer.js","modules/main/menu-sidebar/MenuSidebar.js","pages/Plans/PlansDataTable.js","pages/Plans/PlansPage.js","pages/Notifications/PushNotification.js","pages/Notifications/SendNotificationToSpecficVendor.js","pages/Notifications/SendNotificationToSpecficCustomer.js","pages/Notifications/SendNotificationToAllCustomer.js","pages/Notifications/SendNotificationToAllVendors.js","pages/Notifications/NotificationPage.js","pages/Payments/PaymentsDataTable.js","pages/Payments/PaymentsPage.js","pages/Slider/EditSlidertModal.js","pages/Slider/SliderDataTable.js","pages/Slider/SliderPage.js","pages/Advertisement/EditAddvertisementModal.js","pages/Advertisement/AddsDataTable.js","pages/Advertisement/AddsPage.js","pages/Category/EditCategoryModal.js","pages/Category/CategoryDataTable.js","pages/Category/CategoryPage.js","pages/Products/AddProductPage.js","pages/Advertisement/ImageUpdate.js","pages/Advertisement/AddAdvertisementImage.js","pages/Category/AddCategoryPage.js","pages/ContactUS/ContactUsDataTable.js","pages/ContactUS/ContactUsPage.js","modules/main/Main.js","store/reducers/Authload.js","store/reducers/auth.js","store/index.js","utils/axios.js","services/auth.js","modules/login/Login.js","modules/register/Register.js","modules/forgot-password/ForgotPassword.js","modules/recover-password/RecoverPassword.js","modules/privacy-policy/PrivacyPolicy.js","routes/PublicRoute.js","routes/PrivateRoute.js","App.js","i18n.js","serviceWorker.js","index.js"],"names":["module","exports","SmallBox","type","icon","count","title","navigateTo","t","useTranslation","className","iconClass","to","GetUsersCount","api","axios","create","baseURL","process","useState","data","setData","iserror","setIserror","errorMessages","setErrorMessages","useEffect","get","then","res","users","catch","error","console","log","GetProductsCount","products","GetFeauturedProductsCount","GetPaymentsCount","payments","Dashboard","icons","facebook","google","googlePlus","AppButton","spinnerTemplate","iconTemplate","children","isLoading","theme","disabled","otherProps","as","animation","size","role","Button","variant","PageLoading","classes","loading","ChangePasswordPage","props","useForm","register","handleSubmit","spinner","setspinner","Redirect","setRedirect","onSubmit","newpassword","newpassword1","alert","FormData","post","localStorage","removeItem","toast","success","window","location","reload","required","bgColor","GetCurrentUser","JSON","parse","getItem","Profile","src","alt","email","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","DataTable","Grid","container","spacing","item","md","Alert","severity","map","msg","i","options","exportButton","filtering","columns","field","hidden","lookup","active","inactive","blocked","Customer","Vendor","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","status","push","length","patch","id","dataUpdate","tableData","handleRowUpdate","getCustomerCount","getVendorsCount","vendors","UsersHeader","Users","EditProdutModal","selectedValue","userId","description","category","subcategory","quantity","isShow","isFeatured","image","reccomendedSubCategoryOfProduct","recommedCateogyOfProduct","RecSubCategory","setRecSubCategory","finalSubArray","selectedRecommdedCategoryFromDropDown","setselectedRecommdedCategoryFromDropDown","defaultValues","recommendSubcategory","recommendCategory","items","Category","setCategory","SubCategory","setSubCategory","redirect","selectedCategoryFromDropDown","setselectedCategoryFromDropDown","finalArray","fileInput","React","createRef","MakeItem","value","cats","Categories","intialCategory","Object","entries","intialDropdownValue","values","err","SubCategories","current","files","name","fd","key","append","placeholder","keys","onChange","e","target","c","ix","clen","index","element","multiple","ProductsDataTable","show","setShow","userID","setUserID","setTitle","setDescription","setImage","setquantity","setstatus","setisFeatured","setisShow","recCategory","setrecCategory","recSubCategory","setrecSubCategory","handleClose","render","border","height","width","onRowClick","event","rowData","preventDefault","onRowDelete","delete","dataDelete","splice","handleRowDelete","Modal","onHide","Header","closeButton","Title","Body","Footer","onClick","ProductsHeader","ProductsPage","AdminsDataTable","admins","onRowAdd","undefined","password","dataToAdd","handleRowAdd","AdminsPage","ImageUpdate","file","refs","reader","FileReader","readAsDataURL","onloadend","setState","imageUrl","result","formData","state","this","click","Component","AddSliderImage","TradesDataTable","trades","Confirmed","Declined","accepted","tradeRequest","tradeResponse","GetConfirmedTradesCount","GetTradeRequestCount","GetDeclinedTradesCount","TradesHeader","TradesPage","LOGIN_USER","LOGOUT_USER","LOAD_USER","connect","user","auth","currentUser","dispatch","onUserLogout","ActionTypes","dropdownRef","useRef","history","useHistory","isDropdownOpen","dropdownState","updateDropdownState","toggleDropdown","handleClickOutside","contains","document","addEventListener","removeEventListener","picture","toggleMenuSidebar","href","d","SysDate","Date","getFullYear","style","color","rel","PROJECT_TITLE","exact","PlansDataTable","plans","amount","posts","PlansPage","sleep","ms","setTimeout","PushNotification","errors","formState","a","htmlFor","SendNotificationToSpecficVendor","Spinner","objectArray","rows","cols","fcmToken","SendNotificationToSpecficCustomer","SendNotificationToAllCustomer","SendNotificationToAllVendors","NotificationsPage","PaymentsDataTable","CAPTURED","NotCAPTURED","PaymentsPage","EditSlidertModal","setSpinner","SliderDataTable","pictures","bannerImages","SliderPage","EditAddvertisementModal","hyperLink","AddsDataTable","sethyperLink","advertisementImages","AddsPage","EditCategoryModal","CategoryDataTable","categories","_id","CategoryPage","AddPrdouctPage","setredirect","optinalImagesProduct","AddAdvertisementImage","AddCategoryPage","cat","setcat","sub","setsub","getUsers","forEach","array","contactUs","ContactUsPage","ContactUsDataTable","onUserLoad","template","appLoadingState","updateAppLoading","isMenuSidebarCollapsed","menusidebarState","updateMenusidebarState","Gatekeeper","getProfile","response","fetchProfile","getElementById","classList","remove","add","path","component","ChangePassword","onKeyDown","Authload","initialState","isLoggedIn","token","reducer","action","setItem","rootReducer","combineReducers","authReducer","store","createStore","intance","interceptors","request","use","getState","headers","Authorization","reject","loginByAuth","stringify","registerByAuth","onUserLogin","isAuthLoading","setAuthLoading","formik","useFormik","initialValues","validationSchema","Yup","min","max","AuthService","message","getFieldProps","touched","block","passwordRetype","when","is","val","oneOf","defaultValue","ForgotPassword","emailInput","warn","RecoverPassword","passwordInput","confirmPasswordInput","PrivacyPolicy","rest","isAuthenticated","pathname","from","App","resources","en","translation","translationEN","tr","translationTR","es","fr","de","translationDE","i18n","initReactI18next","init","lng","interpolation","escapeValue","react","wait","Boolean","hostname","match","configure","autoClose","draggable","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","pauseOnHover","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e185d108.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"PageLoading_loading__3Fbb9\",\"loadingShrink\":\"PageLoading_loadingShrink__2uCHl\"};","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\n\nconst SmallBox = ({\n    type = 'info',\n    icon = 'ion-bag',\n    count,\n    title,\n    navigateTo\n}) => {\n    const {t} = useTranslation();\n\n    let className = 'small-box';\n    let iconClass = 'ion';\n    switch (type) {\n        case 'success':\n            className += ' bg-success';\n            break;\n        case 'warning':\n            className += ' bg-warning';\n            break;\n        case 'danger':\n            className += ' bg-danger';\n            break;\n        case 'info':\n            className += ' bg-info';\n            break;\n        default:\n            className += ' bg-info';\n            break;\n    }\n\n    iconClass += icon ? ` ${icon}` : ' ion-bag';\n\n    return (\n        <div className={className}>\n            <div className=\"inner\">\n                <h3>{count}</h3>\n                <p>{title}</p>\n            </div>\n            <div className=\"icon\">\n                <i className={iconClass} />\n            </div>\n            <Link to={navigateTo} className=\"small-box-footer\">\n                <span className=\"mr-2\">{t('main.label.moreInfo')}</span>\n                <i className=\"fa fa-arrow-circle-right\" />\n            </Link>\n        </div>\n    );\n};\n\nexport default SmallBox;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst GetUsersCount = () => {\n    const api = axios.create({\n        baseURL: `${process.env.REACT_APP_SERVER_URL}`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('api/admin/getUsersCount')\n            .then((res) => {\n                setData(res.data.users);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data}</>;\n};\n\nexport default GetUsersCount;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst GetProductsCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/getProductsCount')\n            .then((res) => {\n                setData(res.data.products);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data}</>;\n};\n\nexport default GetProductsCount;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst GetFeauturedProductsCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/getFeauturedProductsCount')\n            .then((res) => {\n                setData(res.data.products);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data}</>;\n};\n\nexport default GetFeauturedProductsCount;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst GetPaymentsCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/getPaymentsCount')\n            .then((res) => {\n                setData(res.data.payments);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data}</>;\n};\n\nexport default GetPaymentsCount;\n","/* eslint-disable */\nimport React from 'react';\nimport SmallBox from '../components/small-box/SmallBox';\nimport GetUsersCount from '@app/pages/GetUsersCount';\nimport GetProductsCount from '@app/pages/Products/GetProductsCount';\nimport GetFeauturedProductsCount from '@app/pages/Products/GetFeauturedProductsCount';\nimport GetPaymentsCount from '@app/pages/Payments/GetPaymentsCount';\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\nconst Dashboard = () => {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={<GetUsersCount />}\n                        title=\"No of Users\"\n                        type=\"info\"\n                        icon=\"ion-android-people\"\n                        navigateTo=\"/users\"\n                    />\n                </div>\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={<GetProductsCount />}\n                        title=\"No of Products\"\n                        type=\"success\"\n                        navigateTo=\"/products\"\n                    />\n                </div>\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={<GetFeauturedProductsCount />}\n                        title=\"Feautured Products\"\n                        icon=\"ion-bag\"\n                        type=\"warning\"\n                        navigateTo=\"/products\"\n                    />\n                </div>\n                <div className=\"col-lg-3 col-6\">\n                    <SmallBox\n                        count={<GetPaymentsCount />}\n                        title=\"No. of Payments\"\n                        type=\"danger\"\n                        icon=\"ion-cash\"\n                        navigateTo=\"/payments\"\n                    />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <center>\n                        <h4 className=\"text-center\">مرحبا Admin</h4>\n                    </center>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst icons = {\n    facebook: 'fab fa-facebook',\n    google: 'fab fa-google',\n    googlePlus: 'fab fa-google-plus'\n};\n\nconst AppButton = ({\n    children,\n    isLoading,\n    icon,\n    theme = 'primary',\n    disabled,\n    ...otherProps\n}) => {\n    let spinnerTemplate;\n    let iconTemplate;\n\n    if (isLoading) {\n        spinnerTemplate = (\n            <Spinner\n                className=\"ml-2\"\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            />\n        );\n    }\n\n    if (icon && icons[icon]) {\n        iconTemplate = <i className={`${icons[icon]} mr-2`} />;\n    }\n\n    return (\n        // eslint-disable-next-line react/button-has-type\n        <Button\n            {...otherProps}\n            variant={theme}\n            disabled={isLoading || disabled}\n        >\n            {iconTemplate}\n            {children}\n            {spinnerTemplate}\n        </Button>\n    );\n};\n\nexport default AppButton;\n","import React from 'react';\nimport classes from './PageLoading.module.scss';\n\nconst PageLoading = () => {\n    return (\n        <div className={classes.loading}>\n            <span>B</span>\n            <span>A</span>\n            <span>D</span>\n            <span>I</span>\n            <span>N</span>\n            <span>L</span>\n            <span>Y</span>\n        </div>\n    );\n};\n\nexport default PageLoading;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport Loader from 'react-js-loader';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst ChangePasswordPage = (props) => {\n    // const {userId, title ,description,category,subcategory,status,quantity,isShow,isFeatured,image} = props;\n    const {register, handleSubmit} = useForm();\n    const [ImageValue, setImageValue] = useState('');\n    const [spinner, setspinner] = useState(false);\n    const [t] = useTranslation();\n    const fileInput = React.createRef('');\n    const [FileInupt, setFileInupt] = useState('');\n\n    const [Redirect, setRedirect] = useState(false);\n\n    const [Data, setData] = useState('');\n\n    const onSubmit = (data) => {\n        // still to resolve promise\n\n        if (data.newpassword !== data.newpassword1) {\n            alert(\"Passwords don't match\");\n        } else {\n            // make API call\n        }\n        const fd = new FormData();\n\n        setspinner(true);\n\n        axios\n            .post('https://badilnyint.com/api/admin/changePassword', data)\n            .then((res) => {\n                console.log(res.data);\n                localStorage.removeItem('token');\n                toast.success(`Password updated sucessfully !`);\n                refreshPage();\n            })\n            .catch((error) => {\n                console.log('Error', error);\n                toast.error(`something went wrong, could not update password`);\n                setspinner(false);\n                setRedirect(false);\n            });\n    };\n\n    if (Redirect) {\n        return <Redirect to=\"/login\" />;\n    }\n    return (\n        <div>\n            <div>\n                <div className=\"login-box\">\n                    <div className=\"card card-outline card-primary\">\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Email *</p>\n                                    <input\n                                        type=\"email\"\n                                        {...register('email', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Old Password*</p>\n                                    <input\n                                        type=\"password\"\n                                        {...register('oldpassword', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>New Password*</p>\n                                    <input\n                                        type=\"password\"\n                                        {...register('newpassword', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n\n                                <div className=\"Field-group mb-3\">\n                                    <p>Confirm Password*</p>\n                                    <input\n                                        type=\"password\"\n                                        {...register('newpassword1', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block\"\n                                        >\n                                            ChangePassword\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                            {spinner ? (\n                                <Loader\n                                    type=\"spinner-circle\"\n                                    className=\"mt-5\"\n                                    bgColor={'#000000'}\n                                    title={'...loading'}\n                                    size={50}\n                                />\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChangePasswordPage;\n","import React, {useState} from 'react';\n/* eslint-disable */\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport {Button} from '@components';\nimport ActivityTab from './ActivityTab';\nimport TimelineTab from './TimelineTab';\nimport SettingsTab from './SettingsTab';\nimport ChangePassword from '@app/pages/ChangePassword/ChangePassword';\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nconst Profile = () => {\n    const [activeTab, setActiveTab] = useState('ACTIVITY');\n    const [t] = useTranslation();\n\n    const toggle = (tab) => {\n        if (activeTab !== tab) setActiveTab(tab);\n    };\n\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.user.profile')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.user.profile')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <div className=\"text-center\">\n                                        <img\n                                            className=\"profile-user-img img-fluid img-circle\"\n                                            src=\"/img/default-profile.png\"\n                                            alt=\"User profile\"\n                                        />\n                                    </div>\n                                    <h3 className=\"profile-username text-center\">\n                                      {GetCurrentUser() ? GetCurrentUser().email : 'Admin'}\n                                    </h3>\n                                    <Link to=\"/changePassword\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block\"\n                                        >\n                                            Change Password\n                                        </button>\n                                    </Link>\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default Profile;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com`\n});\n\nconst DataTable = () => {\n    const columns = [\n        {title: 'id', field: 'id', hidden: true},\n        {title: 'name', field: 'name'},\n        {title: 'Email', field: 'email'},\n        {\n            title: 'status',\n            field: 'status',\n            lookup: {active: 'active', inactive: 'inactive', blocked: 'blocked'}\n        },\n        {\n            title: 'userType',\n            field: 'userType',\n            lookup: {Customer: 'Customer', Vendor: 'Vendor'}\n        },\n        {title: 'phoneNumber', field: 'phoneNumber'}\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/usersList')\n            .then((res) => {\n                setData(res.data.users);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.status === '') {\n            errorList.push('Please select valid status');\n        }\n\n        if (errorList.length < 1) {\n            api.patch(`/api/admin/users/u/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    // const handleRowAdd = (newData, resolve) => {\n    //     // validation\n    //     const errorList = [];\n    //     if (newData.first_name === undefined) {\n    //         errorList.push('Please enter first name');\n    //     }\n    //     if (newData.last_name === undefined) {\n    //         errorList.push('Please enter last name');\n    //     }\n    //     if (\n    //         newData.email === undefined ||\n    //         validateEmail(newData.email) === false\n    //     ) {\n    //         errorList.push('Please enter a valid email');\n    //     }\n\n    //     if (errorList.length < 1) {\n    //         // no error\n    //         api.post('/users', newData)\n    //             .then((res) => {\n    //                 const dataToAdd = [...data];\n    //                 dataToAdd.push(newData);\n    //                 setData(dataToAdd);\n    //                 resolve();\n    //                 setErrorMessages([]);\n    //                 setIserror(false);\n    //             })\n    //             .catch((error) => {\n    //                 setErrorMessages(['Cannot add data. Server error!']);\n    //                 setIserror(true);\n    //                 resolve();\n    //             });\n    //     } else {\n    //         setErrorMessages(errorList);\n    //         setIserror(true);\n    //         resolve();\n    //     }\n    // };\n\n    const handleRowDelete = (oldData, resolve) => {\n        const pid = api\n            .delete(`/api/admin/users/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12 col-12\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true,\n                            filtering: true\n                        }}\n                        title=\"List of Users\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        editable={{\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowUpdate(newData, oldData, resolve);\n                                })\n                            // onRowAdd: (newData) =>\n                            //     new Promise((resolve) => {\n                            //         handleRowAdd(newData, resolve);\n                            //     }),\n                            // onRowDelete: (oldData) =>\n                            //     new Promise((resolve) => {\n                            //         handleRowDelete(oldData, resolve);\n                            //     })\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTable;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst getCustomerCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/user/getCustomerCount')\n            .then((res) => {\n                setData(res.data.users);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data}</>;\n};\n\nexport default getCustomerCount;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst getVendorsCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/user/getVendorsCount')\n            .then((res) => {\n                setData(res.data.vendors);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data ? data : 0}</>;\n};\n\nexport default getVendorsCount;\n","/* eslint-disable */\n\nimport {SmallBox} from '@app/components/index';\nimport GetUsersCount from '../../pages/GetUsersCount';\nimport React from 'react';\nimport GetCustomerCount from './getCustomerCount';\nimport GetVendorsCount from './getVendorsCount';\n\nconst UsersHeader = () => {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-lg-4 col-4\">\n                    <SmallBox\n                        count={<GetUsersCount />}\n                        title=\"No of Users\"\n                        type=\"info\"\n                        icon=\"ion-android-people\"\n                    />\n                </div>\n                <div className=\"col-lg-4 col-4\">\n                    <SmallBox\n                        count={<GetCustomerCount />}\n                        title=\"No of Customers\"\n                        type=\"danger\"\n                        icon=\"ion-android-people\"\n                    />\n                </div>\n                <div className=\"col-lg-4 col-4\">\n                    <SmallBox\n                        count={<GetVendorsCount />}\n                        title=\"No of Vendors\"\n                        icon=\"ion-bag\"\n                        type=\"warning\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UsersHeader;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport DataTable from './DataTabel';\nimport UsersHeader from './usersHeader';\n\nconst Users = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <UsersHeader />\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.user.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.user.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div>\n                        <DataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default Users;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport Loader from 'react-js-loader';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst EditProdutModal = (props) => {\n    const {\n        userId,\n        title,\n        description,\n        category,\n        subcategory,\n        status,\n        quantity,\n        isShow,\n        isFeatured,\n        image,\n        reccomendedSubCategoryOfProduct,\n        recommedCateogyOfProduct\n    } = props;\n\n    const [recomdendSubcategory, setrecomdendSubcategory] = useState([]);\n    const [RecSubCategory, setRecSubCategory] = useState([]);\n\n    let finalSubArray = [];\n\n    const [\n        selectedRecommdedCategoryFromDropDown,\n        setselectedRecommdedCategoryFromDropDown\n    ] = useState('');\n\n    const {register, handleSubmit} = useForm({\n        defaultValues: {\n            title: `${title}`,\n            description: `${description}`,\n            status: `${status}`,\n            quantity: `${quantity}`,\n            category: `${category}`,\n            // subcategory: `${subcategory}`,\n            image: `${image}`,\n            isShow: `${isShow}`,\n            recommendSubcategory: `${reccomendedSubCategoryOfProduct}`,\n            recommendCategory: `${recommedCateogyOfProduct}`\n        }\n    });\n\n    const items = [];\n    let SubCategoriesFound = [];\n    let SubCategoryObjectValues = [];\n    let SubCategoryLength;\n    let superText;\n\n    let selectedValue;\n    const [Category, setCategory] = useState([]);\n    const [QueryCategory, SetQueryCategory] = useState([]);\n    const [SubCategory, setSubCategory] = useState([]);\n    const [Spinner, setSpinner] = useState(false);\n\n    const [redirect, setredirect] = useState(false);\n\n    const [FilteredSubCat, setFilteredSubCat] = useState([]);\n    const [FiltredSubLen, setFiltredSubLen] = useState('');\n\n    const [\n        selectedCategoryFromDropDown,\n        setselectedCategoryFromDropDown\n    ] = useState('');\n\n    let finalArray = [];\n    const numbers = [1, 2, 3, 4, 5];\n\n    const [ImageValue, setImageValue] = useState('');\n    const [spinner, setspinner] = useState(false);\n    const [t] = useTranslation();\n    const fileInput = React.createRef('');\n    const [FileInupt, setFileInupt] = useState('');\n\n    const [Data, setData] = useState('');\n\n    const MakeItem = function (value) {\n        return (\n            <>\n                <option key={value} value={value}>\n                    {value}\n                </option>\n            </>\n        );\n    };\n\n    console.log('subcs', subcategory);\n\n    useEffect(() => {\n        axios\n            .get('https://badilnyint.com/api/admin/getCats')\n            .then((res) => {\n                //console.log(\"cats\",res.data.Categories[0])\n\n                const cats = res.data.Categories;\n\n                const objectArray = Object.entries(cats[0]);\n\n                const intialCategory = objectArray[0];\n\n                const intialValues = Object.values(intialCategory);\n\n                const intialDropdownValue = intialValues[1].category;\n\n                console.log('intial selected values', intialDropdownValue);\n\n                setCategory(res.data.Categories);\n\n                setselectedCategoryFromDropDown(category);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, []);\n\n    //useedddjvvjvv\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                setSubCategory(res.data.SubCategories);\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n    }, [selectedCategoryFromDropDown]);\n\n    //recommended sub category fetch\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedRecommdedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                // //SubCategoriesFound is an array\n\n                // const c = res.data.SubCategories[0]\n                // SubCategoriesFound =res.data.SubCategories[0]\n\n                // SubCategoryLength = SubCategoriesFound.length\n\n                // console.log(\"c\",c)\n                // console.log(\"cz\",SubCategoriesFound)\n                // console.log(\"czlen\", SubCategoryLength)\n\n                // const objectArray =  Object.entries(SubCategoriesFound[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value;\n                //  SubCategoryObjectValues = subArry\n\n                // console.log(\"values k:\",SubCategoryObjectValues); // 1\n\n                // });\n\n                //FilterDataCopy()\n\n                setRecSubCategory(res.data.SubCategories);\n                //let subs ;\n                //console.log(res.data)\n\n                //console.log(\"gggg\",SubCategory)\n                // const result =  Object.values(res.data.SubCategories);\n                //  setSubCategory(result)\n\n                // subs =  res.data.SubCategories\n\n                // const objectArray =  Object.entries(SubCategory[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value.subcategory;\n                //  setFilteredSubCat(subArry)\n                // const subArryLen = subArry.length;\n\n                //  setFiltredSubLen(subArryLen)\n                // console.log(\"values k:\",FilteredSubCat, FiltredSubLen); // 1\n\n                // });\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n        // do stuff\n        //console.log(\"cccccc\",selectedCategoryFromDropDown);\n    }, [selectedRecommdedCategoryFromDropDown]);\n\n    console.log(Category);\n\n    const onSubmit = (data) => {\n        // still to resolve promise\n        console.log(\n            'onSubmitFn:',\n            data,\n            '  imageFile: ',\n            fileInput.current.files[0].name\n        );\n        const fd = new FormData();\n        for (var key in data) {\n            fd.append(key, data[key]); // formdata doesn't take objects\n        }\n\n        fd.append(\n            'image',\n            fileInput.current.files[0],\n            fileInput.current.files[0].name\n        );\n\n        setspinner(true);\n\n        axios\n            .patch(`https://badilnyint.com/api/product/${userId}`, fd)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`Product updated sucessfully !`);\n                setspinner(false);\n                refreshPage();\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    };\n    if (redirect) {\n        return <Redirect to=\"/products\" />;\n    }\n    return (\n        <div>\n            <div>\n                <div className=\"login-box\">\n                    <div className=\"card card-outline card-primary\">\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Title</p>\n                                    <input\n                                        {...register('title', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={title}\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Description</p>\n                                    <input\n                                        {...register('description', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={description}\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Category*</p>\n                                    {Object.keys(Category).map((item, i) => (\n                                        <select\n                                            key={i}\n                                            {...register('category')}\n                                            className=\"form-control\"\n                                            onChange={(e) => {\n                                                selectedValue = e.target.value;\n                                                console.log(selectedValue);\n                                                setselectedCategoryFromDropDown(\n                                                    e.target.value\n                                                );\n                                                //   dropHandler(e)\n                                                //{FilterDataCopy()}\n                                            }}\n                                            className=\"form-control\"\n                                            placeholder=\"Category\"\n                                        >\n                                            {Category[i].map((c, i) => (\n                                                <>\n                                                    <option\n                                                        key={i}\n                                                        value={c.category}\n                                                    >\n                                                        {c.category}\n                                                    </option>\n                                                </>\n                                            ))}\n                                        </select>\n                                    ))}\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>SubCategory*</p>\n\n                                    {Object.entries(SubCategory).map(\n                                        (item, i) => (\n                                            <select\n                                                key={items}\n                                                {...register('subcategory', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"subcategory\"\n                                            >\n                                                {SubCategory[i].map((c, ix) => {\n                                                    let clen =\n                                                        c.subcategory.length;\n                                                    for (\n                                                        let index = ix;\n                                                        index < clen;\n                                                        index++\n                                                    ) {\n                                                        const element =\n                                                            c.subcategory;\n                                                        console.log(\n                                                            index,\n                                                            clen,\n                                                            element[index]\n                                                        );\n\n                                                        finalArray.push(\n                                                            element[index]\n                                                        );\n                                                    }\n                                                })}\n\n                                                {finalArray.map(MakeItem)}\n                                            </select>\n                                        )\n                                    )}\n                                </div>\n\n                                <div className=\"Field-group mb-3\">\n                                    <p>RecommendCategory*</p>\n                                    {Object.keys(Category).map((item, i) => (\n                                        <select\n                                            key={i}\n                                            {...register('recommendCategory')}\n                                            className=\"form-control\"\n                                            onChange={(e) => {\n                                                selectedValue = e.target.value;\n                                                console.log(selectedValue);\n                                                setselectedRecommdedCategoryFromDropDown(\n                                                    e.target.value\n                                                );\n                                                //   dropHandler(e)\n                                                //{FilterDataCopy()}\n                                            }}\n                                            className=\"form-control\"\n                                            placeholder=\"recommendCategory\"\n                                        >\n                                            {Category[i].map((c, i) => (\n                                                <>\n                                                    <option\n                                                        key={i}\n                                                        value={c.category}\n                                                    >\n                                                        {c.category}\n                                                    </option>\n                                                </>\n                                            ))}\n                                        </select>\n                                    ))}\n                                </div>\n\n                                <div className=\"Field-group mb-3\">\n                                    <p>RecommendedSubCategory*</p>\n\n                                    {Object.entries(RecSubCategory).map(\n                                        (item, i) => (\n                                            <select\n                                                key={items}\n                                                {...register(\n                                                    'recommendSubcategory',\n                                                    {\n                                                        required: true\n                                                    }\n                                                )}\n                                                className=\"form-control\"\n                                            >\n                                                {RecSubCategory[i].map(\n                                                    (c, ix) => {\n                                                        let clen =\n                                                            c.subcategory\n                                                                .length;\n                                                        for (\n                                                            let index = ix;\n                                                            index < clen;\n                                                            index++\n                                                        ) {\n                                                            const element =\n                                                                c.subcategory;\n                                                            console.log(\n                                                                index,\n                                                                clen,\n                                                                element[index]\n                                                            );\n\n                                                            finalSubArray.push(\n                                                                element[index]\n                                                            );\n                                                        }\n                                                    }\n                                                )}\n\n                                                {finalSubArray.map(MakeItem)}\n                                            </select>\n                                        )\n                                    )}\n                                </div>\n\n                                <div className=\"Field-group mb-3\">\n                                    <p>Image*</p>\n                                    <input\n                                        required\n                                        multiple\n                                        ref={fileInput}\n                                        type=\"file\"\n                                        className=\"form-control\"\n                                        placeholder=\"Please choose Image\"\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>isFeatured</p>\n                                    <select\n                                        className=\"form-control\"\n                                        {...register('isFeatured', {\n                                            required: true\n                                        })}\n                                    >\n                                        <p>{isFeatured}</p>\n                                        <option value=\"true\">True</option>\n                                        <option value=\"false\">False</option>\n                                    </select>\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Status</p>\n                                    <select\n                                        className=\"form-control\"\n                                        {...register('status', {\n                                            required: true\n                                        })}\n                                    >\n                                        <option value=\"active\">active</option>\n                                        <option value=\"inactive\">\n                                            inactive\n                                        </option>\n                                    </select>\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Visibility</p>\n                                    <select\n                                        className=\"form-control\"\n                                        {...register('isShow', {\n                                            required: true\n                                        })}\n                                    >\n                                        <option value=\"true\">true</option>\n                                        <option value=\"false\">false</option>\n                                    </select>\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Quantity</p>\n                                    <input\n                                        type=\"number\"\n                                        {...register('quantity', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={quantity}\n                                    />\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block\"\n                                        >\n                                            Update Product\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                            {spinner ? (\n                                <Loader\n                                    type=\"spinner-circle\"\n                                    className=\"mt-5\"\n                                    bgColor={'#000000'}\n                                    title={'...loading'}\n                                    size={50}\n                                />\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditProdutModal;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nimport {Button} from '@app/components/index';\nimport Modal from 'react-bootstrap/Modal';\nimport EditProdutModal from '@app/pages/Products/EditProductModal';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com/`\n});\n\nconst ProductsDataTable = () => {\n    const [show, setShow] = useState(false);\n    const [userID, setUserID] = useState('');\n    const [title, setTitle] = useState('');\n    //description //image\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n    const [quantity, setquantity] = useState('');\n    const [status, setstatus] = useState('');\n    const [isFeatured, setisFeatured] = useState('');\n    const [isShow, setisShow] = useState('');\n\n    const [recCategory, setrecCategory] = useState('');\n\n    const [recSubCategory, setrecSubCategory] = useState('');\n\n    const handleClick = (event, rowData) => {\n        event.preventDefault();\n        console.log(rowData);\n        setUserID(rowData.id);\n        setTitle(rowData.title);\n        setDescription(rowData.description);\n        setImage(rowData.image);\n        setisShow(rowData.isShow);\n        setCategory(rowData.category);\n        setisFeatured(rowData.isFeatured);\n        setstatus(rowData.status);\n        setSubCategory(rowData.subcategory);\n        setquantity(rowData.quantity);\n\n        setrecSubCategory(rowData.recommendSubcategory);\n        setrecCategory(rowData.recommendCategory);\n\n        setShow(true);\n    };\n    const handleClose = () => setShow(false);\n    const handleShow = (e) => {\n        {\n            setUserID(e.id);\n        }\n        {\n            console.log(e.id);\n        }\n        setShow(true);\n    };\n\n    const ImageHandler = (e) => {\n        alert(e);\n    };\n\n    const columns = [\n        {title: 'id', field: '_id', hidden: true},\n\n        {title: 'title', field: 'title'},\n        {title: 'Desc', field: 'description'},\n        {title: 'category', field: 'category'},\n        {title: 'subcategory', field: 'subcategory'},\n        {title: 'recommendCategory', field: 'recommendCategory'},\n        {title: 'recommendSubcategory', field: 'recommendSubcategory'},\n\n        {\n            title: 'image',\n            field: 'image',\n\n            render: (item) => (\n                <>\n                    <img\n                        src={`https://badilnyint.com/` + item.image}\n                        alt=\"\"\n                        border=\"3\"\n                        height=\"100\"\n                        width=\"100\"\n                    />\n                </>\n            )\n        },\n\n        {title: 'quantity', field: 'quantity', editable: 'never'},\n        {\n            title: 'status',\n            field: 'status',\n            lookup: {active: 'active', inactive: 'inactive', blocked: 'blocked'}\n        },\n        {title: 'isFeatured', field: 'isFeatured'},\n        {title: 'isShow', field: 'isShow'}\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/product/all')\n            .then((res) => {\n                setData(res.data.products);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === '') {\n            errorList.push('Please enter valid title');\n        }\n        if (newData.description === '') {\n            errorList.push('Please enter valid description');\n        }\n\n        if (errorList.length < 1) {\n            api.patch(`/api/product/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    // const handleRowAdd = (newData, resolve) => {\n    //     // validation\n    //     const errorList = [];\n    //     if (newData.first_name === undefined) {\n    //         errorList.push('Please enter first name');\n    //     }\n    //     if (newData.last_name === undefined) {\n    //         errorList.push('Please enter last name');\n    //     }\n    //     if (\n    //         newData.email === undefined ||\n    //         validateEmail(newData.email) === false\n    //     ) {\n    //         errorList.push('Please enter a valid email');\n    //     }\n\n    //     if (errorList.length < 1) {\n    //         // no error\n    //         api.post('/users', newData)\n    //             .then((res) => {\n    //                 const dataToAdd = [...data];\n    //                 dataToAdd.push(newData);\n    //                 setData(dataToAdd);\n    //                 resolve();\n    //                 setErrorMessages([]);\n    //                 setIserror(false);\n    //             })\n    //             .catch((error) => {\n    //                 setErrorMessages(['Cannot add data. Server error!']);\n    //                 setIserror(true);\n    //                 resolve();\n    //             });\n    //     } else {\n    //         setErrorMessages(errorList);\n    //         setIserror(true);\n    //         resolve();\n    //     }\n    // };\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(`/api/product/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    // const handleRowSatusUpdate = (oldData, resolve) => {\n    //     api.delete(`/api/product/${oldData.id}`)\n    //         .then((res) => {\n    //             console.log(oldData.id);\n    //             const dataDelete = [...data];\n    //             const index = oldData.tableData.id;\n    //             dataDelete.splice(index, 1);\n    //             setData([...dataDelete]);\n    //             resolve();\n    //         })\n    //         .catch((error) => {\n    //             setErrorMessages(['Delete failed! Server error']);\n    //             setIserror(true);\n    //             resolve();\n    //         });\n    // };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12 col-m-6 col-sm-12\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true,\n                            // selection: true,\n                            filtering: true\n                        }}\n                        title=\"List of Feautured Products (title,desc are editable)\"\n                        onRowClick={handleClick}\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        editable={{\n                            // onRowUpdate: (newData, oldData) =>\n                            //     new Promise((resolve) => {\n                            //         handleRowUpdate(newData, oldData, resolve);\n                            //     }),\n                            // onRowAdd: (newData) =>\n                            //     new Promise((resolve) => {\n                            //         handleRowAdd(newData, resolve);\n                            //     }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve);\n                                })\n                        }}\n                        // actions={[\n                        //     {\n                        //         tooltip: 'make active all products',\n                        //         icon: 'delete',\n                        //         onClick: (evt, data) => {\n                        //             alert(\n                        //                 'You want to delete ' + data.length + ''\n                        //             )\n\n                        //             api.delete(`/api/product/${data._id}`)\n                        //             .then((res) => {\n                        //                 console.log(data._id);\n                        //                 const dataDelete = [...data];\n                        //                 const index = data.tableData._id;\n                        //                 dataDelete.splice(index, 1);\n                        //                 setData([...dataDelete]);\n                        //             })\n                        //             .catch((error) => {\n                        //                 setErrorMessages(['Delete failed! Server error']);\n                        //                 setIserror(true);\n                        //             })\n                        //         }\n                        //     }\n                        // ]}\n                    />\n                </div>\n            </div>{' '}\n            <>\n                {/* <Button\n                        variant=\"primary\"\n                        className=\"my-2\"\n                        onClick={handleShow}\n                    >\n                        Edit\n                    </Button> */}\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Update Product</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <EditProdutModal\n                            userId={userID}\n                            title={title}\n                            description={description}\n                            image={image}\n                            isFeatured={isFeatured}\n                            isShow={isShow}\n                            status={status}\n                            quantity={quantity}\n                            subcategory={subcategory}\n                            category={category}\n                            reccomendedSubCategoryOfProduct={recSubCategory}\n                            recommedCateogyOfProduct={recCategory}\n                        />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        </div>\n    );\n};\n\nexport default ProductsDataTable;\n","/* eslint-disable */\n\nimport {SmallBox} from '@app/components/index';\nimport React from 'react';\nimport GetFeauturedProductsCount from './GetFeauturedProductsCount';\nimport GetProductsCount from './GetProductsCount';\n\nconst ProductsHeader = () => {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-lg-6 col-6\">\n                    <SmallBox\n                        count={<GetProductsCount />}\n                        title=\"No of Products\"\n                        type=\"info\"\n                        icon=\"ion-android-people\"\n                    />\n                </div>\n                <div className=\"col-lg-6 col-6\">\n                    <SmallBox\n                        count={<GetFeauturedProductsCount />}\n                        title=\"Feautured Products\"\n                        icon=\"ion-bag\"\n                        type=\"warning\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductsHeader;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport ProductsDataTable from './ProductsDataTable';\nimport ProductsHeader from './ProductsHeader';\n\nconst ProductsPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <ProductsHeader />\n                    <div className=\"row\">\n                        <div className=\"col-3 m-4\">\n                            <Link to=\"/AddProductPage\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block\"\n                                >\n                                    {t('product.addProduct')}\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.products.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.products.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div>\n                        <ProductsDataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default ProductsPage;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com/`\n});\n\nconst AdminsDataTable = () => {\n    const columns = [\n        {title: 'id', field: 'id', hidden: true},\n        {title: 'name', field: 'name'},\n        {title: 'email', field: 'email'},\n        {title: 'password', field: 'password'}\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/adminsList')\n            .then((res) => {\n                setData(res.data.admins);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n        if (newData.amount === undefined) {\n            errorList.push('Please enter amount');\n        }\n        if (newData.type === undefined) {\n            errorList.push('Please enter type');\n        }\n        if (newData.posts === undefined) {\n            errorList.push('Please enter posts');\n        }\n        if (errorList.length < 1) {\n            api.patch(`/api/admin/plans/u/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowAdd = (newData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.name === undefined) {\n            errorList.push('Please enter name');\n        }\n        if (newData.email === undefined) {\n            errorList.push('Please enter email');\n        }\n        if (newData.password === undefined) {\n            errorList.push('Please enter password');\n        }\n\n        if (errorList.length < 1) {\n            // no error\n            api.post('/api/admin/auth/create', newData)\n                .then((res) => {\n                    const dataToAdd = [...data];\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    resolve();\n                    setErrorMessages([]);\n                    setIserror(false);\n                })\n                .catch((error) => {\n                    setErrorMessages(['Cannot add data. Server error!']);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(`/api/admin/admin/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                console.log(error);\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12  col-sm-12 col-md-6\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true\n                        }}\n                        title=\"List of Admins\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        editable={{\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData, resolve);\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve);\n                                })\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminsDataTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport AdminsDataTable from './AdminDataTable';\n\nconst AdminsPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.admin.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.admin.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div>\n                        <AdminsDataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default AdminsPage;\n","/* eslint-disable */\n\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport {toast} from 'react-toastify';\nimport {Redirect} from 'react-router-dom';\n\nimport Loader from 'react-js-loader';\n\nimport './style.css';\n\nclass ImageUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: '',\n            title: 'title',\n            description: 'descrption',\n            spinner: false,\n            redirect: false\n        };\n    }\n\n    onChange = (e) => {\n        if (e.target.type === 'file') {\n            // Assuming only image\n            let file = this.refs.image.files[0];\n            let reader = new FileReader();\n            let url = reader.readAsDataURL(file);\n\n            reader.onloadend = (e) => {\n                this.setState({imageUrl: [reader.result], image: file});\n            };\n        }\n\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value});\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', this.state.image);\n        formData.append('description', this.state.description);\n        formData.append('title', this.state.title);\n        this.setState({spinner: true});\n\n        // still to resolve promise\n        axios\n            .post('https://badilnyint.com/api/admin/banner/addImages', formData)\n            .then((res) => {\n                console.log(res.data);\n                this.setState({spinner: false});\n                toast.success(`Slider uploaded  sucessfully !`);\n                this.setState({redirect: true});\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n            });\n    };\n\n    render() {\n        const {imageUrl, description, title, redirect} = this.state;\n\n        if (redirect) {\n            return <Redirect to=\"/slider\" />;\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-md-center\">\n                    <div className=\"col-12 col-sm-6  form-wrapper\">\n                        <div className=\"login-box\">\n                            <div className=\"card card-outline card-primary\">\n                                <div className=\"card-body\">\n                                    <form onSubmit={this.onSubmit}>\n                                        <div className=\"profile-div\">\n                                            {this.state.imageUrl ? (\n                                                <div className=\"col-12 col-sm-4\">\n                                                    <img\n                                                        width=\"50%\"\n                                                        src={imageUrl}\n                                                        onClick={() =>\n                                                            this.refs.image.click()\n                                                        }\n                                                        className=\"img-placeholder form-control\"\n                                                        alt=\"\"\n                                                    />\n                                                </div>\n                                            ) : (\n                                                <div\n                                                    className=\"img-placeholder\"\n                                                    onClick={() =>\n                                                        this.refs.image.click()\n                                                    }\n                                                ></div>\n                                            )}\n                                            <p>\n                                                <b>Image</b>*\n                                            </p>\n                                            <input\n                                                type=\"file\"\n                                                ref=\"image\"\n                                                onChange={this.onChange}\n                                                className=\"hidden\"\n                                                required\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label className=\"label \"></label>\n                                            <input\n                                                type=\"hidden\"\n                                                name=\"title\"\n                                                value={title}\n                                                onChange={this.onChange}\n                                                className=\"form-control\"\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label className=\"label \"></label>\n                                            <input\n                                                type=\"hidden\"\n                                                name=\"description\"\n                                                value={description}\n                                                onChange={this.onChange}\n                                                className=\"form-control\"\n                                                required\n                                            />\n                                        </div>\n\n                                        {this.state.spinner ? (\n                                            <Loader\n                                                type=\"spinner-circle\"\n                                                className=\"mt-5\"\n                                                bgColor={'#000000'}\n                                                title={'...loading'}\n                                                size={50}\n                                            />\n                                        ) : null}\n                                        <div className=\"form-group\">\n                                            <button\n                                                type=\"submit\"\n                                                className=\"btn btn-primary btn-block\"\n                                            >\n                                                Upload Slider Images\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ImageUpdate;\n","import React from 'react';\nimport ImageUpdate from './ImageUpdate';\n\nexport default function AddSliderImage() {\n    return (\n        <div>\n            <ImageUpdate />\n        </div>\n    );\n}\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com`\n});\n\nconst TradesDataTable = () => {\n    const columns = [\n        {title: 'id', field: 'id', hidden: true},\n        {title: 'message', field: 'message'},\n\n        {\n            title: 'type',\n            field: 'type',\n            lookup: {\n                Confirmed: 'Confirmed',\n                Declined: 'Declined',\n                accepted: 'accepted',\n                tradeRequest: 'tradeRequest',\n                tradeResponse: 'tradeResponse'\n            }\n        }\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/trade/getAllTrades')\n            .then((res) => {\n                setData(res.data.trades);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n        if (newData.amount === undefined) {\n            errorList.push('Please enter amount');\n        }\n        if (newData.type === undefined) {\n            errorList.push('Please enter type');\n        }\n        if (newData.posts === undefined) {\n            errorList.push('Please enter posts');\n        }\n        if (errorList.length < 1) {\n            api.patch(`/api/admin/plans/u/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowAdd = (newData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n        if (newData.amount === undefined) {\n            errorList.push('Please enter amount');\n        }\n        if (newData.type === undefined) {\n            errorList.push('Please enter type');\n        }\n        if (newData.posts === undefined) {\n            errorList.push('Please enter posts');\n        }\n\n        if (errorList.length < 1) {\n            // no error\n            api.post('/api/admin/plans/createPlan', newData)\n                .then((res) => {\n                    const dataToAdd = [...data];\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    resolve();\n                    setErrorMessages([]);\n                    setIserror(false);\n                })\n                .catch((error) => {\n                    setErrorMessages(['Cannot add data. Server error!']);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(`/api/admin/plans/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                console.log(error);\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12  col-sm-12 col-md-6\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true,\n                            filtering: true\n                        }}\n                        title=\"List of Trades\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        // editable={{\n                        //     onRowUpdate: (newData, oldData) =>\n                        //         new Promise((resolve) => {\n                        //             handleRowUpdate(newData, oldData, resolve);\n                        //         }),\n                        //     onRowAdd: (newData) =>\n                        //         new Promise((resolve) => {\n                        //             handleRowAdd(newData, resolve);\n                        //         }),\n                        //     onRowDelete: (oldData) =>\n                        //         new Promise((resolve) => {\n                        //             handleRowDelete(oldData, resolve);\n                        //         })\n                        // }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TradesDataTable;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst GetConfirmedTradesCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/trade/getConfirmedTradesCount')\n            .then((res) => {\n                setData(res.data.trades);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data}</>;\n};\n\nexport default GetConfirmedTradesCount;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst GetTradeRequestCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/trade/getTradeRequestTradesCount')\n            .then((res) => {\n                setData(res.data.trades);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data}</>;\n};\n\nexport default GetTradeRequestCount;\n","/* eslint-disable */\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst GetDeclinedTradesCount = () => {\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const [data, setData] = useState([]); // table data\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/trade/getListofDeclinedTrades')\n            .then((res) => {\n                setData(res.data.trades);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                setIserror(true);\n                setErrorMessages([` Server error`]);\n            });\n    }, []);\n    return <>{iserror ? errorMessages : data ? data : 0}</>;\n};\n\nexport default GetDeclinedTradesCount;\n","/* eslint-disable */\n\nimport {SmallBox} from '@app/components/index';\nimport GetConfirmedTradesCount from './GetConfirmedTradesCount';\nimport React from 'react';\nimport GetTradeRequestCount from '@app/pages/Trades/GetTradeRequestCount';\nimport GetDeclinedTradesCount from '@app/pages/Trades/GetDeclinedTradesCount';\n\nconst TradesHeader = () => {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-lg-4 col-4\">\n                    <SmallBox\n                        count={<GetTradeRequestCount />}\n                        title=\"Trade Requests\"\n                        type=\"info\"\n                        icon=\"ion-android-people\"\n                    />\n                </div>\n                <div className=\"col-lg-4 col-4\">\n                    <SmallBox\n                        count={<GetConfirmedTradesCount />}\n                        title=\"Confirmed Trades \"\n                        icon=\"ion-bag\"\n                        type=\"warning\"\n                    />\n                </div>\n                <div className=\"col-lg-4 col-4\">\n                    <SmallBox\n                        count={<GetDeclinedTradesCount />}\n                        title=\"Declined Trades \"\n                        icon=\"ion-bag\"\n                        type=\"danger\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TradesHeader;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport TradesDataTable from './TradesDataTable';\nimport TradesHeader from './TradesHeader';\n\nconst TradesPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <TradesHeader />\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.trades.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.trades.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div>\n                        <TradesDataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default TradesPage;\n","export const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n","import React, {useRef, useEffect, useState} from 'react';\nimport {useHistory, Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\n\nimport * as ActionTypes from '../../../../store/actions';\n\nconst getCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nconst UserDropdown = ({user, onUserLogout}) => {\n    const dropdownRef = useRef(null);\n    const history = useHistory();\n    const {t} = useTranslation();\n\n    const [dropdownState, updateDropdownState] = useState({\n        isDropdownOpen: false\n    });\n\n    const toggleDropdown = () => {\n        updateDropdownState({isDropdownOpen: !dropdownState.isDropdownOpen});\n    };\n\n    const handleClickOutside = (event) => {\n        if (\n            dropdownRef &&\n            dropdownRef.current &&\n            !dropdownRef.current.contains(event.target)\n        ) {\n            updateDropdownState({isDropdownOpen: false});\n        }\n    };\n\n    const logOut = (event) => {\n        toggleDropdown();\n        event.preventDefault();\n        onUserLogout();\n        history.push('/login');\n    };\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside, false);\n        return () => {\n            document.removeEventListener(\n                'mousedown',\n                handleClickOutside,\n                false\n            );\n        };\n    });\n\n    let className = 'dropdown-menu dropdown-menu-lg dropdown-menu-right';\n\n    if (dropdownState.isDropdownOpen) {\n        className += ' show';\n    }\n\n    return (\n        <li ref={dropdownRef} className=\"nav-item dropdown user-menu\">\n            <button\n                onClick={toggleDropdown}\n                type=\"button\"\n                className=\"nav-link dropdown-toggle\"\n                data-toggle=\"dropdown\"\n            >\n                <img\n                    src={user.picture || '/img/default-profile.png'}\n                    className=\"user-image img-circle elevation-2\"\n                    alt=\"User\"\n                />\n                {/* <span className=\"d-none d-md-inline\">{email}</span> */}\n            </button>\n            <ul className={className}>\n                <li className=\"user-header bg-primary\">\n                    <img\n                        src={user.picture || '/img/default-profile.png'}\n                        className=\"img-circle elevation-2\"\n                        alt=\"User\"\n                    />\n                    <p>{getCurrentUser().email}</p>\n                </li>\n                {/* <li className=\"user-body\">\n                    <div className=\"row\">\n                        <div className=\"col-4 text-center\">\n                            <Link to=\"/\">{t('header.user.home')}</Link>\n                        </div>\n                        <div className=\"col-4 text-center\">\n                            <Link to=\"/products\">\n                                {t('header.user.products')}\n                            </Link>\n                        </div>\n                        <div className=\"col-4 text-center\">\n                            <Link to=\"/notifications\">\n                                {t('header.user.notifications')}\n                            </Link>\n                        </div>\n                    </div>\n                </li> */}\n                <li className=\"user-footer\">\n                    <Link\n                        to=\"/changePassword\"\n                        onClick={toggleDropdown}\n                        className=\"btn btn-default btn-flat\"\n                    >\n                        {t('header.user.changePassword')}\n                    </Link>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-default btn-flat float-right\"\n                        onClick={logOut}\n                    >\n                        {t('login.button.signOut')}\n                    </button>\n                </li>\n            </ul>\n        </li>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.currentUser\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLogout: () => dispatch({type: ActionTypes.LOGOUT_USER})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDropdown);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\n// import Messages from './messages-dropdown/MessagesDropdown';\n// import Notifications from './notifications-dropdown/NotificationsDropdown';\n// import Languages from './languages-dropdown/LanguagesDropdown';\nimport User from './user-dropdown/UserDropdown';\n\nconst Header = ({toggleMenuSidebar}) => {\n    const [t] = useTranslation();\n    return (\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n            {/* Left navbar links */}\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <button\n                        onClick={() => toggleMenuSidebar()}\n                        type=\"button\"\n                        className=\"nav-link\"\n                        data-widget=\"pushmenu\"\n                        href=\"#\"\n                    >\n                        <i className=\"fas fa-bars\" />\n                    </button>\n                </li>\n                <li className=\"nav-item d-none d-sm-inline-block\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        {t('header.label.home')}\n                    </Link>\n                </li>\n                {/* <li className=\"nav-item d-none d-sm-inline-block\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        {t('header.label.contact')}\n                    </Link>\n                </li> */}\n            </ul>\n            {/* <form className=\"form-inline ml-3\">\n                <div className=\"input-group input-group-sm\">\n                    <input\n                        className=\"form-control form-control-navbar\"\n                        type=\"search\"\n                        placeholder=\"Search\"\n                        aria-label=\"Search\"\n                    />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-navbar\" type=\"submit\">\n                            <i className=\"fas fa-search\" />\n                        </button>\n                    </div>\n                </div>\n            </form> */}\n            <ul className=\"navbar-nav ml-auto\">\n                {/* <Messages />\n            <Notifications /> */}\n                {/* <Languages /> */}\n                <User />\n                {/* <li className=\"nav-item\">\n          <button\n            className=\"nav-link\"\n            data-widget=\"control-sidebar\"\n            data-slide=\"true\"\n            type=\"button\"\n          >\n            <i className=\"fas fa-th-large\" />\n          </button>\n        </li> */}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Header;\n","import React, {useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst Footer = () => {\n    let {d, n} = '';\n    const {t} = useTranslation();\n    const SysDate = () => {\n        d = new Date();\n        n = d.getFullYear();\n        return n;\n    };\n    useEffect(() => {\n        SysDate();\n    }, []);\n\n    return (\n        <footer className=\"main-footer\">\n            <div className=\"float-right d-none d-sm-block\">\n                <b>{t('footer.version')}</b>\n                <b> </b>\n                <span>\n                    <i\n                        className=\"nav-icon  fas fa-heart\"\n                        style={{color: 'red'}}\n                    />\n                    Kuwait\n                </span>\n            </div>\n            <strong>\n                <span>\n                    Copyright © 2020-\n                    {SysDate()}\n                </span>\n                <a\n                    href=\"http://adminlte.io\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    {process.env.PROJECT_TITLE}\n                </a>\n                <span>.</span>\n            </strong>\n            <span> </span>\n            <span>{t('footer.copyright')}</span>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {NavLink, Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\n\nconst MenuSidebar = ({user}) => {\n    const GetCurrentUser = () => {\n        const C = JSON.parse(localStorage.getItem('user'));\n        return C;\n    };\n\n    const {t} = useTranslation();\n\n    return (\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\n            <Link to=\"/\" className=\"brand-link\">\n                {/* <img\n                    src=\"/img/logo-white.png\"\n                    alt=\"Badinly Logo\"\n                    className=\"brand-image img-circle elevation-3\"\n                    style={{opacity: '.8'}}\n                /> */}\n                <span className=\"brand-text font-weight-light ml-4\">\n                    Badinly\n                </span>\n            </Link>\n            <div className=\"sidebar\">\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n                    <div className=\"image\">\n                        <img\n                            src={user.picture || '/img/default-profile.png'}\n                            className=\"img-circle elevation-2\"\n                            alt=\"User\"\n                        />\n                    </div>\n                    <div className=\"info\">\n                        <Link to=\"/profile\" className=\"d-block\">\n                            {GetCurrentUser().email}\n                        </Link>\n                    </div>\n                </div>\n                {/* eslint-disable no-debugger, no-console  */}\n                <nav className=\"mt-2\">\n                    <ul\n                        className=\"nav nav-pills nav-sidebar flex-column\"\n                        data-widget=\"treeview\"\n                        role=\"menu\"\n                        data-accordion=\"false\"\n                    >\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-tachometer-alt\" />\n                                <p>{t('menusidebar.label.dashboard')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/profile\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-user\" />\n                                <p>{t('menusidebar.label.profile')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/adminPage\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-user-shield\" />\n                                <p>{t('menusidebar.label.admin')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/users\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-users\" />\n                                <p>{t('menusidebar.label.user')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/slider\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-images\" />\n                                <p>{t('menusidebar.label.slider')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/Adds\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fal fa-images\" />\n                                <p>{t('menusidebar.label.Adds')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/categoriesPage\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-cubes\" />\n                                <p>{t('menusidebar.label.category')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/products\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-cart-plus\" />\n                                <p>{t('menusidebar.label.products')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/tradesPage\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-cart-plus\" />\n                                <p>{t('menusidebar.label.trades')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/plans\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-chart-line\" />\n                                <p>{t('menusidebar.label.plans')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/ContactUsPage\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-bell\" />\n                                <p>{t('menusidebar.label.contactus')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/payments\" exact className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-money-bill-wave-alt\" />\n                                <p>{t('menusidebar.label.payments')}</p>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/notifications\"\n                                exact\n                                className=\"nav-link\"\n                            >\n                                <i className=\"nav-icon fas fa-bell\" />\n                                <p>{t('menusidebar.label.notifications')}</p>\n                            </NavLink>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </aside>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.currentUser\n});\n\nexport default connect(mapStateToProps, null)(MenuSidebar);\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com`\n});\n\nconst PlansDataTable = () => {\n    const columns = [\n        {title: 'id', field: 'id', hidden: true},\n        {title: 'visbility', field: 'visbility'},\n        {title: 'title', field: 'title'},\n        {title: 'Desc', field: 'description'},\n        {title: 'amount', field: 'amount'},\n        {title: 'type', field: 'type'},\n        {title: 'posts', field: 'posts'}\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/plans/list')\n            .then((res) => {\n                setData(res.data.plans);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n        if (newData.amount === undefined) {\n            errorList.push('Please enter amount');\n        }\n        if (newData.type === undefined) {\n            errorList.push('Please enter type');\n        }\n        if (newData.posts === undefined) {\n            errorList.push('Please enter posts');\n        }\n        if (errorList.length < 1) {\n            api.patch(`/api/admin/plans/u/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowAdd = (newData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n        if (newData.amount === undefined) {\n            errorList.push('Please enter amount');\n        }\n        if (newData.type === undefined) {\n            errorList.push('Please enter type');\n        }\n        if (newData.posts === undefined) {\n            errorList.push('Please enter posts');\n        }\n\n        if (errorList.length < 1) {\n            // no error\n            api.post('/api/admin/plans/createPlan', newData)\n                .then((res) => {\n                    const dataToAdd = [...data];\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    resolve();\n                    setErrorMessages([]);\n                    setIserror(false);\n                })\n                .catch((error) => {\n                    setErrorMessages(['Cannot add data. Server error!']);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(`/api/admin/plans/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                console.log(error);\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12  col-sm-12 col-md-6\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true\n                        }}\n                        title=\"List of Plans\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        editable={{\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowUpdate(newData, oldData, resolve);\n                                }),\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData, resolve);\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve);\n                                })\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PlansDataTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport PlansDataTable from './PlansDataTable';\n\nconst PlansPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.plans.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.plans.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div>\n                        <PlansDataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default PlansPage;\n","/* eslint-disable */\nimport React, {useState} from 'react';\n\nimport {useForm} from 'react-hook-form';\n\nimport axios from 'axios';\n\nimport {toast} from 'react-toastify';\nimport Alert from '@material-ui/lab/Alert';\n\nimport './style.css';\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst PushNotification = () => {\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    const api = axios.create({\n        baseURL: `https://badilnyint.com`\n    });\n\n    const {\n        register,\n        handleSubmit,\n        formState: {errors}\n    } = useForm();\n    const onSubmit = async (data) => {\n        await sleep(20);\n        api.post('/api/trade/firebase/notification', data)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`notification response sent sucessfully !`);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n                setIserror(true);\n                setErrorMessages([`Update failed! Server error${error}`]);\n            });\n    };\n\n    return (\n        <div>\n            <div>\n                {iserror && (\n                    <Alert severity=\"error\">\n                        {errorMessages.map((msg, i) => {\n                            return <div key={i}>{msg}</div>;\n                        })}\n                    </Alert>\n                )}\n            </div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <h1>Push Notification</h1>\n                <label htmlFor=\"Message\">message</label>\n                <textarea\n                    {...register('msgToUser')}\n                    className=\"form-control\"\n                    placeholder=\"YOUR MESSAGE\"\n                />\n                <div style={{color: 'red'}}>\n                    {Object.keys(errors).length > 0 &&\n                        'There are errors, check your console.'}\n                </div>\n                <div className=\"col-12\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block mt-3\"\n                    >\n                        submit\n                    </button>\n                </div>{' '}\n            </form>\n        </div>\n    );\n};\n\nexport default PushNotification;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Input from '@app/../node_modules/reactstrap/es/Input';\nimport Select from 'react-select';\nimport Loader from 'react-js-loader';\nimport {Redirect} from 'react-router-dom';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst SendNotificationToSpecficVendor = (props) => {\n    const items = [];\n    let SubCategoriesFound = [];\n    let SubCategoryObjectValues = [];\n    let SubCategoryLength;\n    let superText;\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    let selectedValue;\n    const [Category, setCategory] = useState([]);\n    const [QueryCategory, SetQueryCategory] = useState([]);\n    const [SubCategory, setSubCategory] = useState([]);\n    const [Spinner, setSpinner] = useState(false);\n\n    const [redirect, setredirect] = useState(false);\n\n    const [FilteredSubCat, setFilteredSubCat] = useState([]);\n    const [FiltredSubLen, setFiltredSubLen] = useState('');\n\n    const [\n        selectedCategoryFromDropDown,\n        setselectedCategoryFromDropDown\n    ] = useState('');\n\n    let finalArray = [];\n    const numbers = [1, 2, 3, 4, 5];\n\n    const api = axios.create({\n        baseURL: `https://badilnyint.com/`\n    });\n\n    const MakeItem = function (value) {\n        return (\n            <>\n                <option key={value} value={value}>\n                    {value}\n                </option>\n            </>\n        );\n    };\n\n    //useedddjvvjvv\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                // //SubCategoriesFound is an array\n\n                // const c = res.data.SubCategories[0]\n                // SubCategoriesFound =res.data.SubCategories[0]\n\n                // SubCategoryLength = SubCategoriesFound.length\n\n                // console.log(\"c\",c)\n                // console.log(\"cz\",SubCategoriesFound)\n                // console.log(\"czlen\", SubCategoryLength)\n\n                // const objectArray =  Object.entries(SubCategoriesFound[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value;\n                //  SubCategoryObjectValues = subArry\n\n                // console.log(\"values k:\",SubCategoryObjectValues); // 1\n\n                // });\n\n                //FilterDataCopy()\n\n                setSubCategory(res.data.SubCategories);\n                //let subs ;\n                //console.log(res.data)\n\n                //console.log(\"gggg\",SubCategory)\n                // const result =  Object.values(res.data.SubCategories);\n                //  setSubCategory(result)\n\n                // subs =  res.data.SubCategories\n\n                // const objectArray =  Object.entries(SubCategory[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value.subcategory;\n                //  setFilteredSubCat(subArry)\n                // const subArryLen = subArry.length;\n\n                //  setFiltredSubLen(subArryLen)\n                // console.log(\"values k:\",FilteredSubCat, FiltredSubLen); // 1\n\n                // });\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n        // do stuff\n        //console.log(\"cccccc\",selectedCategoryFromDropDown);\n    }, [selectedCategoryFromDropDown]);\n\n    useEffect(() => {\n        axios\n            .get('https://badilnyint.com/api/user/getListofVendors')\n            .then((res) => {\n                //console.log(\"cats\",res.data.Categories[0])\n\n                const cats = res.data.users;\n\n                const objectArray = Object.entries(cats);\n\n                console.log('intial selected values', objectArray);\n\n                setCategory(objectArray);\n\n                setselectedCategoryFromDropDown(intialDropdownValue);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, []);\n\n    // const myFunction  = async (value, index, array) => {\n    //     //<p key={index}>hello{value}, {array[index]}</p>\n    //     //superText += value ;\n    //     //txt += \"<li>\" + value + \"</li>\";\n    //     // let fLen = array.length;\n    //     let z = Object.values(popArray)\n    //     superText+= \"<li>\" + value + \"</li>\"\n    //     superArray.push(value)\n\n    //     // let newz = popArray[0]\n    //     // let zlen = await newz;\n\n    //     // console.log(\"object values\",newz)\n    //     // console.log(\"type is newz\",typeof newz);\n    //     // console.log(\"new z length :\",fLen)\n    //     // console.log(\"type is z\",typeof z);\n\n    //     console.log(\"type of numbers\", typeof numbers)\n\n    //     z.forEach((element) => {\n\n    //        // txt += element[index] + \"<br>\";\n\n    //           console.log(\"ghh\",element)\n\n    //           document.getElementById(\"demo\").innerHTML = element ;\n    //           console.log(\"element is\",element)\n    //           items.push(<p key={index}>{element}</p>)\n    //          items.push(element)\n    //          console.log(typeof items)\n\n    //     });\n\n    //   }\n\n    // useEffect(() => {\n    // //    console.log(\"finalArray mount\",finalArray)\n    // //    console.log(\"type is\",typeof numbers);\n    //    console.log(\"type is\",typeof popArray);\n\n    //    popArray.forEach(myFunction);\n    //    text = superText;\n    //    //console.log(\"text\",text)\n    // }, [finalArray])\n\n    //   const subData = async () => {\n    //     axios.get(`http://localhost:8001/api/admin/getSubs?CId=mobiles`)\n    //     .then(async(res) => {\n    //         let subs ;\n    //         console.log(res.data)\n    //         const result = await Object.values(res.data.SubCategories);\n    //         await setSubCategory(result)\n\n    //         subs = await res.data.SubCategories\n\n    //         const objectArray = await Object.entries(SubCategory[0]);\n\n    //         objectArray.forEach(async ([key, value]) => {\n    //         console.log(\"key:\",key); // 'one'\n    //         const subArry = value.subcategory;\n    //         await setFilteredSubCat(subArry)\n    //         const subArryLen = subArry.length;\n\n    //         await setFiltredSubLen(subArryLen)\n    //         console.log(\"values:\",FilteredSubCat, FiltredSubLen); // 1\n\n    //         });\n\n    //             })\n    //             .catch(err => {\n    //                 console.error(err);\n    //             })\n    //   }\n\n    //    const dropHandler = async (e) => {\n\n    //    }\n\n    console.log(Category);\n\n    const {register, handleSubmit} = useForm();\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n\n    const onSubmit = async (data) => {\n        await sleep(20);\n        api.post('/api/trade/firebase/SendNotification', data)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`notification response sent sucessfully !`);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n                setIserror(true);\n                setErrorMessages([`Update failed! Server error${error}`]);\n            });\n    };\n\n    if (redirect) {\n        return <Redirect to=\"/products\" />;\n    }\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div>\n                        <div className=\"login-box\">\n                            <div className=\"card card-outline card-primary\">\n                                <h6 className=\"mb-3 mt-3 m-2 text-center\">\n                                    Send Message to Specfic Vendor\n                                </h6>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Message Title*</p>\n                                            <input\n                                                {...register('msgTitle', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"message Title\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Message*</p>\n                                            <textarea\n                                                rows=\"4\"\n                                                cols=\"50\"\n                                                {...register('msgToUser', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"message\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>UserEmail*</p>\n                                            <select\n                                                {...register('UserEmail')}\n                                                className=\"form-control\"\n                                                onChange={(e) => {\n                                                    selectedValue =\n                                                        e.target.value;\n                                                    console.log(selectedValue);\n                                                    setselectedCategoryFromDropDown(\n                                                        e.target.value\n                                                    );\n                                                    //   dropHandler(e)\n                                                    //{FilterDataCopy()}\n                                                }}\n                                                className=\"form-control\"\n                                                placeholder=\"email\"\n                                            >\n                                                {Object.keys(Category).map(\n                                                    (item, ix) =>\n                                                        Category[ix].map(\n                                                            (c, i) => (\n                                                                <option\n                                                                    key={item}\n                                                                    value={\n                                                                        c.fcmToken\n                                                                    }\n                                                                >\n                                                                    {c.email}\n                                                                </option>\n                                                            )\n                                                        )\n                                                )}\n                                            </select>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\"\n                                                >\n                                                    {t(\n                                                        'notification.sendUserSpecficNotifaction'\n                                                    )}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                                {Spinner ? (\n                                    <Loader\n                                        type=\"spinner-circle\"\n                                        className=\"mt-5\"\n                                        bgColor={'#000000'}\n                                        title={'...loading'}\n                                        size={50}\n                                    />\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default SendNotificationToSpecficVendor;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Input from '@app/../node_modules/reactstrap/es/Input';\nimport Select from 'react-select';\nimport Loader from 'react-js-loader';\nimport {Redirect} from 'react-router-dom';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nconst SendNotificationToSpecficCustomer = (props) => {\n    const items = [];\n    let SubCategoriesFound = [];\n    let SubCategoryObjectValues = [];\n    let SubCategoryLength;\n    let superText;\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    let selectedValue;\n    const [Category, setCategory] = useState([]);\n    const [QueryCategory, SetQueryCategory] = useState([]);\n    const [SubCategory, setSubCategory] = useState([]);\n    const [Spinner, setSpinner] = useState(false);\n\n    const [redirect, setredirect] = useState(false);\n\n    const [FilteredSubCat, setFilteredSubCat] = useState([]);\n    const [FiltredSubLen, setFiltredSubLen] = useState('');\n\n    const [\n        selectedCategoryFromDropDown,\n        setselectedCategoryFromDropDown\n    ] = useState('');\n\n    let finalArray = [];\n    const numbers = [1, 2, 3, 4, 5];\n\n    const api = axios.create({\n        baseURL: `https://badilnyint.com/`\n    });\n\n    const MakeItem = function (value) {\n        return (\n            <>\n                <option key={value} value={value}>\n                    {value}\n                </option>\n            </>\n        );\n    };\n\n    //useedddjvvjvv\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                // //SubCategoriesFound is an array\n\n                // const c = res.data.SubCategories[0]\n                // SubCategoriesFound =res.data.SubCategories[0]\n\n                // SubCategoryLength = SubCategoriesFound.length\n\n                // console.log(\"c\",c)\n                // console.log(\"cz\",SubCategoriesFound)\n                // console.log(\"czlen\", SubCategoryLength)\n\n                // const objectArray =  Object.entries(SubCategoriesFound[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value;\n                //  SubCategoryObjectValues = subArry\n\n                // console.log(\"values k:\",SubCategoryObjectValues); // 1\n\n                // });\n\n                //FilterDataCopy()\n\n                setSubCategory(res.data.SubCategories);\n                //let subs ;\n                //console.log(res.data)\n\n                //console.log(\"gggg\",SubCategory)\n                // const result =  Object.values(res.data.SubCategories);\n                //  setSubCategory(result)\n\n                // subs =  res.data.SubCategories\n\n                // const objectArray =  Object.entries(SubCategory[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value.subcategory;\n                //  setFilteredSubCat(subArry)\n                // const subArryLen = subArry.length;\n\n                //  setFiltredSubLen(subArryLen)\n                // console.log(\"values k:\",FilteredSubCat, FiltredSubLen); // 1\n\n                // });\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n        // do stuff\n        //console.log(\"cccccc\",selectedCategoryFromDropDown);\n    }, [selectedCategoryFromDropDown]);\n\n    useEffect(() => {\n        axios\n            .get('https://badilnyint.com/api/user/getListOfCustomers')\n            .then((res) => {\n                //console.log(\"cats\",res.data.Categories[0])\n\n                const cats = res.data.users;\n\n                const objectArray = Object.entries(cats);\n\n                console.log('intial selected values', objectArray);\n\n                setCategory(objectArray);\n\n                setselectedCategoryFromDropDown(intialDropdownValue);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, []);\n\n    // const myFunction  = async (value, index, array) => {\n    //     //<p key={index}>hello{value}, {array[index]}</p>\n    //     //superText += value ;\n    //     //txt += \"<li>\" + value + \"</li>\";\n    //     // let fLen = array.length;\n    //     let z = Object.values(popArray)\n    //     superText+= \"<li>\" + value + \"</li>\"\n    //     superArray.push(value)\n\n    //     // let newz = popArray[0]\n    //     // let zlen = await newz;\n\n    //     // console.log(\"object values\",newz)\n    //     // console.log(\"type is newz\",typeof newz);\n    //     // console.log(\"new z length :\",fLen)\n    //     // console.log(\"type is z\",typeof z);\n\n    //     console.log(\"type of numbers\", typeof numbers)\n\n    //     z.forEach((element) => {\n\n    //        // txt += element[index] + \"<br>\";\n\n    //           console.log(\"ghh\",element)\n\n    //           document.getElementById(\"demo\").innerHTML = element ;\n    //           console.log(\"element is\",element)\n    //           items.push(<p key={index}>{element}</p>)\n    //          items.push(element)\n    //          console.log(typeof items)\n\n    //     });\n\n    //   }\n\n    // useEffect(() => {\n    // //    console.log(\"finalArray mount\",finalArray)\n    // //    console.log(\"type is\",typeof numbers);\n    //    console.log(\"type is\",typeof popArray);\n\n    //    popArray.forEach(myFunction);\n    //    text = superText;\n    //    //console.log(\"text\",text)\n    // }, [finalArray])\n\n    //   const subData = async () => {\n    //     axios.get(`http://localhost:8001/api/admin/getSubs?CId=mobiles`)\n    //     .then(async(res) => {\n    //         let subs ;\n    //         console.log(res.data)\n    //         const result = await Object.values(res.data.SubCategories);\n    //         await setSubCategory(result)\n\n    //         subs = await res.data.SubCategories\n\n    //         const objectArray = await Object.entries(SubCategory[0]);\n\n    //         objectArray.forEach(async ([key, value]) => {\n    //         console.log(\"key:\",key); // 'one'\n    //         const subArry = value.subcategory;\n    //         await setFilteredSubCat(subArry)\n    //         const subArryLen = subArry.length;\n\n    //         await setFiltredSubLen(subArryLen)\n    //         console.log(\"values:\",FilteredSubCat, FiltredSubLen); // 1\n\n    //         });\n\n    //             })\n    //             .catch(err => {\n    //                 console.error(err);\n    //             })\n    //   }\n\n    //    const dropHandler = async (e) => {\n\n    //    }\n\n    console.log(Category);\n\n    const {register, handleSubmit} = useForm();\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n\n    const onSubmit = async (data) => {\n        await sleep(20);\n        api.post('/api/trade/firebase/SendNotification', data)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`notification response sent sucessfully !`);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n                setIserror(true);\n                setErrorMessages([`Update failed! Server error${error}`]);\n            });\n    };\n\n    if (redirect) {\n        return <Redirect to=\"/products\" />;\n    }\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div>\n                        <div className=\"login-box\">\n                            <div className=\"card card-outline card-primary\">\n                                <h6 className=\"mb-3 mt-3 m-2 text-center\">\n                                    Send Message to Specfic Customer\n                                </h6>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Message Title*</p>\n                                            <input\n                                                rows=\"4\"\n                                                cols=\"50\"\n                                                {...register('msgTitle', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"message Title\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Message*</p>\n                                            <textarea\n                                                rows=\"4\"\n                                                cols=\"50\"\n                                                {...register('msgToUser', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"message\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>UserEmail*</p>\n                                            <select\n                                                {...register('UserEmail')}\n                                                className=\"form-control\"\n                                                onChange={(e) => {\n                                                    selectedValue =\n                                                        e.target.value;\n                                                    console.log(selectedValue);\n                                                    setselectedCategoryFromDropDown(\n                                                        e.target.value\n                                                    );\n                                                    //   dropHandler(e)\n                                                    //{FilterDataCopy()}\n                                                }}\n                                                className=\"form-control\"\n                                                placeholder=\"Category\"\n                                            >\n                                                {Object.keys(Category).map(\n                                                    (item, ix) =>\n                                                        Category[ix].map(\n                                                            (c, i) => (\n                                                                <option\n                                                                    key={item}\n                                                                    value={\n                                                                        c.fcmToken\n                                                                    }\n                                                                >\n                                                                    {c.email}\n                                                                </option>\n                                                            )\n                                                        )\n                                                )}\n                                            </select>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\"\n                                                >\n                                                    {t(\n                                                        'notification.sendUserSpecficNotifaction'\n                                                    )}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                                {Spinner ? (\n                                    <Loader\n                                        type=\"spinner-circle\"\n                                        className=\"mt-5\"\n                                        bgColor={'#000000'}\n                                        title={'...loading'}\n                                        size={50}\n                                    />\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default SendNotificationToSpecficCustomer;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Input from '@app/../node_modules/reactstrap/es/Input';\nimport Select from 'react-select';\nimport Loader from 'react-js-loader';\nimport {Redirect} from 'react-router-dom';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nconst SendNotificationToAllCustomer = (props) => {\n    const items = [];\n    let SubCategoriesFound = [];\n    let SubCategoryObjectValues = [];\n    let SubCategoryLength;\n    let superText;\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    let selectedValue;\n    const [Category, setCategory] = useState([]);\n    const [QueryCategory, SetQueryCategory] = useState([]);\n    const [SubCategory, setSubCategory] = useState([]);\n    const [Spinner, setSpinner] = useState(false);\n\n    const [redirect, setredirect] = useState(false);\n\n    const [FilteredSubCat, setFilteredSubCat] = useState([]);\n    const [FiltredSubLen, setFiltredSubLen] = useState('');\n\n    const [\n        selectedCategoryFromDropDown,\n        setselectedCategoryFromDropDown\n    ] = useState('');\n\n    let finalArray = [];\n    const numbers = [1, 2, 3, 4, 5];\n\n    const api = axios.create({\n        baseURL: `https://badilnyint.com/`\n    });\n\n    const MakeItem = function (value) {\n        return (\n            <>\n                <option key={value} value={value}>\n                    {value}\n                </option>\n            </>\n        );\n    };\n\n    //useedddjvvjvv\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                // //SubCategoriesFound is an array\n\n                // const c = res.data.SubCategories[0]\n                // SubCategoriesFound =res.data.SubCategories[0]\n\n                // SubCategoryLength = SubCategoriesFound.length\n\n                // console.log(\"c\",c)\n                // console.log(\"cz\",SubCategoriesFound)\n                // console.log(\"czlen\", SubCategoryLength)\n\n                // const objectArray =  Object.entries(SubCategoriesFound[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value;\n                //  SubCategoryObjectValues = subArry\n\n                // console.log(\"values k:\",SubCategoryObjectValues); // 1\n\n                // });\n\n                //FilterDataCopy()\n\n                setSubCategory(res.data.SubCategories);\n                //let subs ;\n                //console.log(res.data)\n\n                //console.log(\"gggg\",SubCategory)\n                // const result =  Object.values(res.data.SubCategories);\n                //  setSubCategory(result)\n\n                // subs =  res.data.SubCategories\n\n                // const objectArray =  Object.entries(SubCategory[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value.subcategory;\n                //  setFilteredSubCat(subArry)\n                // const subArryLen = subArry.length;\n\n                //  setFiltredSubLen(subArryLen)\n                // console.log(\"values k:\",FilteredSubCat, FiltredSubLen); // 1\n\n                // });\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n        // do stuff\n        //console.log(\"cccccc\",selectedCategoryFromDropDown);\n    }, [selectedCategoryFromDropDown]);\n\n    useEffect(() => {\n        axios\n            .get('https://badilnyint.com/api/user/getListOfCustomers')\n            .then((res) => {\n                //console.log(\"cats\",res.data.Categories[0])\n\n                const cats = res.data.users;\n\n                const objectArray = Object.entries(cats);\n\n                console.log('intial selected values', objectArray);\n\n                setCategory(objectArray);\n\n                setselectedCategoryFromDropDown(intialDropdownValue);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, []);\n\n    // const myFunction  = async (value, index, array) => {\n    //     //<p key={index}>hello{value}, {array[index]}</p>\n    //     //superText += value ;\n    //     //txt += \"<li>\" + value + \"</li>\";\n    //     // let fLen = array.length;\n    //     let z = Object.values(popArray)\n    //     superText+= \"<li>\" + value + \"</li>\"\n    //     superArray.push(value)\n\n    //     // let newz = popArray[0]\n    //     // let zlen = await newz;\n\n    //     // console.log(\"object values\",newz)\n    //     // console.log(\"type is newz\",typeof newz);\n    //     // console.log(\"new z length :\",fLen)\n    //     // console.log(\"type is z\",typeof z);\n\n    //     console.log(\"type of numbers\", typeof numbers)\n\n    //     z.forEach((element) => {\n\n    //        // txt += element[index] + \"<br>\";\n\n    //           console.log(\"ghh\",element)\n\n    //           document.getElementById(\"demo\").innerHTML = element ;\n    //           console.log(\"element is\",element)\n    //           items.push(<p key={index}>{element}</p>)\n    //          items.push(element)\n    //          console.log(typeof items)\n\n    //     });\n\n    //   }\n\n    // useEffect(() => {\n    // //    console.log(\"finalArray mount\",finalArray)\n    // //    console.log(\"type is\",typeof numbers);\n    //    console.log(\"type is\",typeof popArray);\n\n    //    popArray.forEach(myFunction);\n    //    text = superText;\n    //    //console.log(\"text\",text)\n    // }, [finalArray])\n\n    //   const subData = async () => {\n    //     axios.get(`http://localhost:8001/api/admin/getSubs?CId=mobiles`)\n    //     .then(async(res) => {\n    //         let subs ;\n    //         console.log(res.data)\n    //         const result = await Object.values(res.data.SubCategories);\n    //         await setSubCategory(result)\n\n    //         subs = await res.data.SubCategories\n\n    //         const objectArray = await Object.entries(SubCategory[0]);\n\n    //         objectArray.forEach(async ([key, value]) => {\n    //         console.log(\"key:\",key); // 'one'\n    //         const subArry = value.subcategory;\n    //         await setFilteredSubCat(subArry)\n    //         const subArryLen = subArry.length;\n\n    //         await setFiltredSubLen(subArryLen)\n    //         console.log(\"values:\",FilteredSubCat, FiltredSubLen); // 1\n\n    //         });\n\n    //             })\n    //             .catch(err => {\n    //                 console.error(err);\n    //             })\n    //   }\n\n    //    const dropHandler = async (e) => {\n\n    //    }\n\n    console.log(Category);\n\n    const {register, handleSubmit} = useForm();\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n\n    const onSubmit = async (data) => {\n        await sleep(20);\n        api.post('/api/trade/firebase/SendNotificationToUsers', data)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`notification response sent sucessfully !`);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n                setIserror(true);\n                setErrorMessages([`Update failed! Server error${error}`]);\n            });\n    };\n\n    if (redirect) {\n        return <Redirect to=\"/products\" />;\n    }\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div>\n                        <div className=\"login-box\">\n                            <div className=\"card card-outline card-primary\">\n                                <h6 className=\"mb-3 mt-3 m-2 text-center\">\n                                    Send Message to All Customer\n                                </h6>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Message*</p>\n                                            <textarea\n                                                rows=\"4\"\n                                                cols=\"50\"\n                                                {...register('msgToUser', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"message\"\n                                            />\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\"\n                                                >\n                                                    {t(\n                                                        'notification.sendUserSpecficNotifaction'\n                                                    )}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                                {Spinner ? (\n                                    <Loader\n                                        type=\"spinner-circle\"\n                                        className=\"mt-5\"\n                                        bgColor={'#000000'}\n                                        title={'...loading'}\n                                        size={50}\n                                    />\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default SendNotificationToAllCustomer;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Input from '@app/../node_modules/reactstrap/es/Input';\nimport Select from 'react-select';\nimport Loader from 'react-js-loader';\nimport {Redirect} from 'react-router-dom';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nconst SendNotificationToAllVendors = (props) => {\n    const items = [];\n    let SubCategoriesFound = [];\n    let SubCategoryObjectValues = [];\n    let SubCategoryLength;\n    let superText;\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    let selectedValue;\n    const [Category, setCategory] = useState([]);\n    const [QueryCategory, SetQueryCategory] = useState([]);\n    const [SubCategory, setSubCategory] = useState([]);\n    const [Spinner, setSpinner] = useState(false);\n\n    const [redirect, setredirect] = useState(false);\n\n    const [FilteredSubCat, setFilteredSubCat] = useState([]);\n    const [FiltredSubLen, setFiltredSubLen] = useState('');\n\n    const [\n        selectedCategoryFromDropDown,\n        setselectedCategoryFromDropDown\n    ] = useState('');\n\n    let finalArray = [];\n    const numbers = [1, 2, 3, 4, 5];\n\n    const api = axios.create({\n        baseURL: `https://badilnyint.com/`\n    });\n\n    const MakeItem = function (value) {\n        return (\n            <>\n                <option key={value} value={value}>\n                    {value}\n                </option>\n            </>\n        );\n    };\n\n    //useedddjvvjvv\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                // //SubCategoriesFound is an array\n\n                // const c = res.data.SubCategories[0]\n                // SubCategoriesFound =res.data.SubCategories[0]\n\n                // SubCategoryLength = SubCategoriesFound.length\n\n                // console.log(\"c\",c)\n                // console.log(\"cz\",SubCategoriesFound)\n                // console.log(\"czlen\", SubCategoryLength)\n\n                // const objectArray =  Object.entries(SubCategoriesFound[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value;\n                //  SubCategoryObjectValues = subArry\n\n                // console.log(\"values k:\",SubCategoryObjectValues); // 1\n\n                // });\n\n                //FilterDataCopy()\n\n                setSubCategory(res.data.SubCategories);\n                //let subs ;\n                //console.log(res.data)\n\n                //console.log(\"gggg\",SubCategory)\n                // const result =  Object.values(res.data.SubCategories);\n                //  setSubCategory(result)\n\n                // subs =  res.data.SubCategories\n\n                // const objectArray =  Object.entries(SubCategory[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value.subcategory;\n                //  setFilteredSubCat(subArry)\n                // const subArryLen = subArry.length;\n\n                //  setFiltredSubLen(subArryLen)\n                // console.log(\"values k:\",FilteredSubCat, FiltredSubLen); // 1\n\n                // });\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n        // do stuff\n        //console.log(\"cccccc\",selectedCategoryFromDropDown);\n    }, [selectedCategoryFromDropDown]);\n\n    useEffect(() => {\n        axios\n            .get('https://badilnyint.com/api/user/getListOfCustomers')\n            .then((res) => {\n                //console.log(\"cats\",res.data.Categories[0])\n\n                const cats = res.data.users;\n\n                const objectArray = Object.entries(cats);\n\n                console.log('intial selected values', objectArray);\n\n                setCategory(objectArray);\n\n                setselectedCategoryFromDropDown(intialDropdownValue);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, []);\n\n    // const myFunction  = async (value, index, array) => {\n    //     //<p key={index}>hello{value}, {array[index]}</p>\n    //     //superText += value ;\n    //     //txt += \"<li>\" + value + \"</li>\";\n    //     // let fLen = array.length;\n    //     let z = Object.values(popArray)\n    //     superText+= \"<li>\" + value + \"</li>\"\n    //     superArray.push(value)\n\n    //     // let newz = popArray[0]\n    //     // let zlen = await newz;\n\n    //     // console.log(\"object values\",newz)\n    //     // console.log(\"type is newz\",typeof newz);\n    //     // console.log(\"new z length :\",fLen)\n    //     // console.log(\"type is z\",typeof z);\n\n    //     console.log(\"type of numbers\", typeof numbers)\n\n    //     z.forEach((element) => {\n\n    //        // txt += element[index] + \"<br>\";\n\n    //           console.log(\"ghh\",element)\n\n    //           document.getElementById(\"demo\").innerHTML = element ;\n    //           console.log(\"element is\",element)\n    //           items.push(<p key={index}>{element}</p>)\n    //          items.push(element)\n    //          console.log(typeof items)\n\n    //     });\n\n    //   }\n\n    // useEffect(() => {\n    // //    console.log(\"finalArray mount\",finalArray)\n    // //    console.log(\"type is\",typeof numbers);\n    //    console.log(\"type is\",typeof popArray);\n\n    //    popArray.forEach(myFunction);\n    //    text = superText;\n    //    //console.log(\"text\",text)\n    // }, [finalArray])\n\n    //   const subData = async () => {\n    //     axios.get(`http://localhost:8001/api/admin/getSubs?CId=mobiles`)\n    //     .then(async(res) => {\n    //         let subs ;\n    //         console.log(res.data)\n    //         const result = await Object.values(res.data.SubCategories);\n    //         await setSubCategory(result)\n\n    //         subs = await res.data.SubCategories\n\n    //         const objectArray = await Object.entries(SubCategory[0]);\n\n    //         objectArray.forEach(async ([key, value]) => {\n    //         console.log(\"key:\",key); // 'one'\n    //         const subArry = value.subcategory;\n    //         await setFilteredSubCat(subArry)\n    //         const subArryLen = subArry.length;\n\n    //         await setFiltredSubLen(subArryLen)\n    //         console.log(\"values:\",FilteredSubCat, FiltredSubLen); // 1\n\n    //         });\n\n    //             })\n    //             .catch(err => {\n    //                 console.error(err);\n    //             })\n    //   }\n\n    //    const dropHandler = async (e) => {\n\n    //    }\n\n    console.log(Category);\n\n    const {register, handleSubmit} = useForm();\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n\n    const onSubmit = async (data) => {\n        await sleep(20);\n        api.post('/api/trade/firebase/SendNotificationToVendors', data)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`notification response sent sucessfully !`);\n                setIserror(false);\n                setErrorMessages([]);\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n                setIserror(true);\n                setErrorMessages([`Update failed! Server error${error}`]);\n            });\n    };\n\n    if (redirect) {\n        return <Redirect to=\"/products\" />;\n    }\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div>\n                        <div className=\"login-box\">\n                            <div className=\"card card-outline card-primary\">\n                                <h6 className=\"mb-3 mt-3 m-2 text-center\">\n                                    Send Message to All Vendors\n                                </h6>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Message*</p>\n                                            <textarea\n                                                rows=\"4\"\n                                                cols=\"50\"\n                                                {...register('msgToUser', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"message\"\n                                            />\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\"\n                                                >\n                                                    {t(\n                                                        'notification.sendUserSpecficNotifaction'\n                                                    )}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                                {Spinner ? (\n                                    <Loader\n                                        type=\"spinner-circle\"\n                                        className=\"mt-5\"\n                                        bgColor={'#000000'}\n                                        title={'...loading'}\n                                        size={50}\n                                    />\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default SendNotificationToAllVendors;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport PushNotification from '@app/pages/Notifications/PushNotification';\nimport SendNotificationToSpecficUser from '@app/pages/Notifications/SendNotificationToSpecficVendor';\nimport SendNotificationToSpecficCustomer from '@app/pages/Notifications/SendNotificationToSpecficCustomer';\nimport SendNotificationToAllCustomer from '@app/pages/Notifications/SendNotificationToAllCustomer';\nimport SendNotificationToAllVendors from './SendNotificationToAllVendors';\n\nconst NotificationsPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2 \">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.notifications.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.notifications.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div>\n                        <PushNotification />\n                    </div>\n                    <div className=\"row mb-2 mt-4 \">\n                        <div className=\"col-sm-6 col-lg-6\">\n                            <SendNotificationToSpecficCustomer />\n                        </div>\n\n                        <div className=\"col-sm-6 col-lg-6\">\n                            <SendNotificationToSpecficUser />\n                        </div>\n                    </div>\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-4 col-lg-6\">\n                            <SendNotificationToAllVendors />\n                        </div>\n\n                        <div className=\"col-sm-4  col-lg-6\">\n                            <SendNotificationToAllCustomer />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default NotificationsPage;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com`\n});\n\nconst PaymentsDataTable = () => {\n    const columns = [\n        {title: 'id', field: 'id', hidden: true},\n        {\n            title: 'Result',\n            field: 'Result',\n            lookup: {CAPTURED: 'CAPTURED', NotCAPTURED: 'not-captured'}\n        },\n        {title: 'planType', field: 'planType'},\n\n        {title: 'Email', field: 'CstEmail'},\n        {title: 'Name', field: 'CstFName'},\n        {title: 'Date', field: 'DateOfSub'},\n\n        {title: 'OrderId', field: 'order_id'},\n        {title: 'Amount', field: 'total_price'},\n        {title: 'PaymentID', field: 'PaymentID'},\n        {title: 'Date', field: 'PostDate'},\n        {title: 'TrackingId', field: 'TrackingId'},\n        {title: 'TranId', field: 'TrackingId'},\n        {title: 'Ref', field: 'TrackingId'}\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/payment/paymentsList')\n            .then((res) => {\n                setData(res.data.payments);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === '') {\n            errorList.push('Please enter valid title');\n        }\n        if (newData.description === '') {\n            errorList.push('Please enter valid description');\n        }\n\n        if (errorList.length < 1) {\n            api.patch(`/api/product/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    // const handleRowAdd = (newData, resolve) => {\n    //     // validation\n    //     const errorList = [];\n    //     if (newData.first_name === undefined) {\n    //         errorList.push('Please enter first name');\n    //     }\n    //     if (newData.last_name === undefined) {\n    //         errorList.push('Please enter last name');\n    //     }\n    //     if (\n    //         newData.email === undefined ||\n    //         validateEmail(newData.email) === false\n    //     ) {\n    //         errorList.push('Please enter a valid email');\n    //     }\n\n    //     if (errorList.length < 1) {\n    //         // no error\n    //         api.post('/users', newData)\n    //             .then((res) => {\n    //                 const dataToAdd = [...data];\n    //                 dataToAdd.push(newData);\n    //                 setData(dataToAdd);\n    //                 resolve();\n    //                 setErrorMessages([]);\n    //                 setIserror(false);\n    //             })\n    //             .catch((error) => {\n    //                 setErrorMessages(['Cannot add data. Server error!']);\n    //                 setIserror(true);\n    //                 resolve();\n    //             });\n    //     } else {\n    //         setErrorMessages(errorList);\n    //         setIserror(true);\n    //         resolve();\n    //     }\n    // };\n\n    const handleRowDelete = (oldData, resolve) => {\n        const pid = api\n            .delete(`/api/product/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12 col-md-8 col-sm-12\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true,\n                            filtering: true\n                        }}\n                        title=\"List of Payments\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        // editable={{\n                        //     onRowUpdate: (newData, oldData) =>\n                        //         new Promise((resolve) => {\n                        //             handleRowUpdate(newData, oldData, resolve);\n                        //         }),\n                        //     // onRowAdd: (newData) =>\n                        //     //     new Promise((resolve) => {\n                        //     //         handleRowAdd(newData, resolve);\n                        //     //     }),\n                        //     onRowDelete: (oldData) =>\n                        //         new Promise((resolve) => {\n                        //             handleRowDelete(oldData, resolve);\n                        //         })\n                        // }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentsDataTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport PaymentsDataTable from '@app/pages/Payments/PaymentsDataTable';\n\nconst PaymentsPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.payments.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.payments.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <PaymentsDataTable />\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default PaymentsPage;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Loader from 'react-js-loader';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst EditSlidertModal = (props) => {\n    const {userId, title, description, image} = props;\n    const {register, handleSubmit} = useForm({\n        defaultValues: {\n            userId: `${userId}`,\n            title: `${title}`,\n            description: `${description}`,\n            image: `${image}`\n        }\n    });\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n    const [Data, setData] = useState([]);\n    const [Spinner, setSpinner] = useState(false);\n    console.log(title);\n\n    const onSubmit = (data) => {\n        // still to resolve promise\n        console.log(\n            'onSubmitFn:',\n            data,\n            '  imageFile: ',\n            fileInput.current.files[0].name\n        );\n        const fd = new FormData();\n        for (var key in data) {\n            fd.append(key, data[key]); // formdata doesn't take objects\n        }\n\n        fd.append(\n            'image',\n            fileInput.current.files[0],\n            fileInput.current.files[0].name\n        );\n\n        setSpinner(true);\n\n        axios\n            .patch(`https://badilnyint.com/api/admin/baneer/b/${userId}`, fd)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`Slider updated sucessfully !`);\n                setSpinner(false);\n                refreshPage();\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n            });\n    };\n\n    return (\n        <div>\n            <div>\n                <div className=\"login-box\">\n                    <div className=\"card card-outline card-primary\">\n                        <div className=\"card-body\">\n                            {/* { Object.keys(Data).map((item, i) => (\n                                <div key={i} className=\"report\">\n                                    <p>{item}</p>\n                                    {Data[item].map((media,ind) =>\n                                        <div key={ind}><p>{media.title}</p></div>\n                                    )}\n                                </div>\n                        ))} */}\n\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Title</p>\n\n                                    <input\n                                        {...register('title', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={title}\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Description</p>\n\n                                    <input\n                                        {...register('description', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={description}\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Image*</p>\n\n                                    <input\n                                        required\n                                        multiple\n                                        ref={fileInput}\n                                        type=\"file\"\n                                        className=\"form-control\"\n                                        placeholder={description}\n                                    />\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block\"\n                                        >\n                                            {t('slider.addImage')}\n                                        </button>\n                                    </div>\n                                </div>\n                                {Spinner ? (\n                                    <Loader\n                                        type=\"spinner-circle\"\n                                        className=\"mt-5\"\n                                        bgColor={'#000000'}\n                                        title={'...loading'}\n                                        size={50}\n                                    />\n                                ) : null}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditSlidertModal;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nimport {Button} from '@app/components/index';\nimport Modal from 'react-bootstrap/Modal';\nimport EditSlidertModal from './EditSlidertModal';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com`\n});\n\nconst SliderDataTable = () => {\n    const [show, setShow] = useState(false);\n    const [userID, setUserID] = useState('');\n    const [title, setTitle] = useState('');\n    //description //image\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n\n    const handleClose = () => setShow(false);\n\n    const handleClick = (event, rowData) => {\n        event.preventDefault();\n        console.log(rowData);\n        console.log(rowData.id);\n        setUserID(rowData.id);\n        setTitle(rowData.title);\n        setDescription(rowData.description);\n        setImage(rowData.description);\n\n        setShow(true);\n    };\n\n    const handleShow = (e) => {\n        setShow(true);\n    };\n    let path;\n    const [state, setState] = useState({\n        pictures: []\n    });\n\n    const onDropHandler = (pictureFiles, pictureDataURLs) => {\n        setState({\n            pictures: pictureFiles\n        });\n        path = pictureDataURLs;\n    };\n\n    const columns = [\n        {title: 'id', field: '_id', hidden: false},\n        {\n            title: 'image',\n            field: 'image',\n            render: (item) => (\n                <>\n                    <img\n                        src={`https://badilnyint.com/` + item.image}\n                        alt=\"\"\n                        border=\"3\"\n                        height=\"100\"\n                        width=\"100\"\n                    />\n                </>\n            )\n        }\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/banner/getImages')\n            .then((res) => {\n                setData(res.data.bannerImages);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n        if (newData.amount === undefined) {\n            errorList.push('Please enter amount');\n        }\n        if (newData.type === undefined) {\n            errorList.push('Please enter type');\n        }\n        if (newData.posts === undefined) {\n            errorList.push('Please enter posts');\n        }\n        if (errorList.length < 1) {\n            api.patch(`/api/admin/banner/u/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowAdd = (newData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n\n        if (errorList.length < 1) {\n            // no error\n            api.post('/api/admin/banner/addImages', newData)\n                .then((res) => {\n                    const dataToAdd = [...data];\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    resolve();\n                    setErrorMessages([]);\n                    setIserror(false);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setErrorMessages(['Cannot add data. Server error!']);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(`/api/admin/banner/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                console.log(error);\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12  col-sm-12 col-md-6\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true\n                        }}\n                        onRowClick={handleClick}\n                        title=\"List of Slider images\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        editable={{\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve);\n                                })\n                        }}\n                    />\n                </div>\n            </div>\n\n            <>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit Slider</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <EditSlidertModal\n                            userId={userID}\n                            title={title}\n                            description={description}\n                            image={image}\n                        />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        </div>\n    );\n};\n\nexport default SliderDataTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport SliderDataTable from './SliderDataTable';\n\nconst SliderPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.slider.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.slider.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-3 m-4\">\n                            <Link to=\"/AddSliderImage\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block\"\n                                >\n                                    {t('slider.addImage')}\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div>\n                        <SliderDataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default SliderPage;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Loader from 'react-js-loader';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst EditAddvertisementModal = (props) => {\n    const {userId, title, description, image , hyperLink} = props;\n    const {register, handleSubmit} = useForm({\n        defaultValues: {\n            userId: `${userId}`,\n            title: `${title}`,\n            description: `${description}`,\n            image: `${image}`,\n            hyperLink :`${hyperLink}`\n        }\n    });\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n    const [Data, setData] = useState([]);\n    const [Spinner, setSpinner] = useState(false);\n    console.log(title);\n\n    const onSubmit = (data) => {\n        // still to resolve promise\n        console.log(\n            'onSubmitFn:',\n            data,\n            '  imageFile: ',\n            fileInput.current.files[0].name\n        );\n        const fd = new FormData();\n        for (var key in data) {\n            fd.append(key, data[key]); // formdata doesn't take objects\n        }\n\n        fd.append(\n            'image',\n            fileInput.current.files[0],\n            fileInput.current.files[0].name\n        );\n\n        setSpinner(true);\n\n        axios\n            .patch(`https://badilnyint.com/api/admin/adds/a/${userId}`, fd)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`Slider updated sucessfully !`);\n                setSpinner(false);\n                refreshPage();\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n            });\n    };\n\n    return (\n        <div>\n            <div>\n                <div className=\"login-box\">\n                    <div className=\"card card-outline card-primary\">\n                        <div className=\"card-body\">\n                            {/* { Object.keys(Data).map((item, i) => (\n                                <div key={i} className=\"report\">\n                                    <p>{item}</p>\n                                    {Data[item].map((media,ind) =>\n                                        <div key={ind}><p>{media.title}</p></div>\n                                    )}\n                                </div>\n                        ))} */}\n\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <p>{title}</p>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Title</p>\n                                    <input\n                                        {...register('title', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Description</p>\n                                    <input\n                                        {...register('description', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={description}\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>HyperLink</p>\n                                    <input\n                                        {...register('hyperLink', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={hyperLink}\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <p>Image*</p>\n\n                                    <input\n                                        required\n                                        multiple\n                                        ref={fileInput}\n                                        type=\"file\"\n                                        className=\"form-control\"\n                                        placeholder={description}\n                                    />\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block\"\n                                        >\n                                            {t('add.addImage')}\n                                        </button>\n                                    </div>\n                                </div>\n\n                                {Spinner ? (\n                                    <Loader\n                                        type=\"spinner-circle\"\n                                        className=\"mt-5\"\n                                        bgColor={'#000000'}\n                                        title={'...loading'}\n                                        size={50}\n                                    />\n                                ) : null}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditAddvertisementModal;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nimport {Button} from '@app/components/index';\nimport Modal from 'react-bootstrap/Modal';\nimport EditAddvertisementModal from './EditAddvertisementModal';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com/`\n});\n\nconst AddsDataTable = (props) => {\n    const [show, setShow] = useState(false);\n    const [userID, setUserID] = useState('');\n    const [title, setTitle] = useState('');\n    //description //image\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [hyperLink , sethyperLink] = useState('')\n\n    const handleClose = () => setShow(false);\n\n    const handleClick = (event, rowData) => {\n        event.preventDefault();\n        console.log(rowData);\n        console.log(rowData.id);\n        setUserID(rowData.id);\n        setTitle(rowData.title);\n        setDescription(rowData.description);\n        setImage(rowData.description);\n        sethyperLink(rowData.hyperLink)\n\n        setShow(true);\n    };\n\n    let path;\n    const [state, setState] = useState({\n        pictures: []\n    });\n\n    const onDropHandler = (pictureFiles, pictureDataURLs) => {\n        setState({\n            pictures: pictureFiles\n        });\n        path = pictureDataURLs;\n    };\n\n    const columns = [\n        {title: 'id', field: '_id', hidden: true},\n        {title: 'title', field: 'title'},\n        {title: 'Desc', field: 'description'},\n        {title: 'HyperLink', field: 'hyperLink'},\n\n        {\n            title: 'image',\n            field: 'image',\n            render: (item) => (\n                <>\n                    <img\n                        src={`https://badilnyint.com/` + item.image}\n                        alt=\"\"\n                        border=\"3\"\n                        height=\"100\"\n                        width=\"100\"\n                    />\n                </>\n            )\n        }\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/adds/getImages')\n            .then((res) => {\n                setData(res.data.advertisementImages);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n        if (newData.amount === undefined) {\n            errorList.push('Please enter amount');\n        }\n        if (newData.type === undefined) {\n            errorList.push('Please enter type');\n        }\n        if (newData.posts === undefined) {\n            errorList.push('Please enter posts');\n        }\n        if (errorList.length < 1) {\n            api.patch(`/api/admin/banner/u/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowAdd = (newData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === undefined) {\n            errorList.push('Please enter title');\n        }\n        if (newData.description === undefined) {\n            errorList.push('Please enter desc');\n        }\n\n        if (errorList.length < 1) {\n            // no error\n            api.post('/api/admin/adds/addImages', newData)\n                .then((res) => {\n                    const dataToAdd = [...data];\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    resolve();\n                    setErrorMessages([]);\n                    setIserror(false);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setErrorMessages(['Cannot add data. Server error!']);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(`/api/admin/adds/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                console.log(error);\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12  col-sm-12 col-md-6\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true\n                        }}\n                        title=\"List of Addvertisement images\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        editable={{\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve);\n                                })\n                        }}\n                        onRowClick={handleClick}\n                    />\n                </div>\n            </div>\n\n            <>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit Addvertisement</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <EditAddvertisementModal\n                            userId={userID}\n                            title={title}\n                            description={description}\n                            image={image}\n                            hyperLink={hyperLink}\n                        />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        </div>\n    );\n};\n\nexport default AddsDataTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport AddsDataTable from './AddsDataTable';\n\nconst AddsPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.Adds.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.Adds.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-3 m-4\">\n                            <Link to=\"/AddAdvertisement\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block\"\n                                >\n                                    {t('add.addImage')}\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div>\n                        <AddsDataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default AddsPage;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst EditCategoryModal = (props) => {\n    const {\n        userId,\n        title,\n        description,\n        category,\n        subcategory,\n        status,\n        quantity,\n        isShow,\n        isFeatured,\n        image\n    } = props;\n    const {register, handleSubmit} = useForm({\n        defaultValues: {\n            category: `${category}`,\n            subcategory: `${subcategory}`\n        }\n    });\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n    const [Data, setData] = useState('');\n    const [Spinner, setSpinner] = useState(false);\n\n    const onSubmit = (data) => {\n        // still to resolve promise\n        // console.log(\n        //     'onSubmitFn:',\n        //     data,\n        //     '  imageFile: ',\n        //     fileInput.current.files[0].name\n        // );\n        const fd = new FormData();\n        for (var key in data) {\n            fd.append(key, data[key]); // formdata doesn't take objects\n        }\n\n        // fd.append(\n        //     'image',\n        //     fileInput.current.files[0],\n        //     fileInput.current.files[0].name\n        // );\n\n        axios\n            .patch(\n                `https://badilnyint.com/api/admin/category/addSubCategory/${userId}`,\n                data\n            )\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`category updated sucessfully !`);\n                refreshPage();\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n            });\n    };\n\n    return (\n        <div>\n            <div>\n                <div className=\"login-box\">\n                    <div className=\"card card-outline card-primary\">\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"Field-group mb-3\">\n                                    <input\n                                        {...register('category', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={category}\n                                    />\n                                </div>\n                                <div className=\"Field-group mb-3\">\n                                    <input\n                                        {...register('subcategory', {\n                                            required: true\n                                        })}\n                                        className=\"form-control\"\n                                        placeholder={subcategory}\n                                    />\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block\"\n                                        >\n                                            {t('category.updateCategory')}\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditCategoryModal;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nimport {Button} from '@app/components/index';\nimport EditCategoryModal from './EditCategoryModal';\nimport {toast} from 'react-toastify';\nimport Modal from 'react-bootstrap/Modal';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com`\n});\n\nconst CategoryDataTable = (props) => {\n    const [show, setShow] = useState(false);\n    const [userID, setUserID] = useState('');\n    const [title, setTitle] = useState('');\n    //description //image\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n    const [quantity, setquantity] = useState('');\n    const [status, setstatus] = useState('');\n    const [isFeatured, setisFeatured] = useState('');\n    const [isShow, setisShow] = useState('');\n\n    const [value, setValue] = React.useState('');\n    const handleChange = (event) => {\n        console.log(event.target.value.split(','));\n        setValue(event.target.value);\n    };\n\n    const handleClose = () => setShow(false);\n    const handleShow = (e) => {\n        {\n            setUserID(e.id);\n        }\n        {\n            console.log(e.id);\n        }\n        setShow(true);\n    };\n\n    const handleClick = (event, rowData) => {\n        event.preventDefault();\n        console.log(rowData);\n        setUserID(rowData._id);\n        setCategory(rowData.category);\n        setSubCategory(rowData.subcategory);\n\n        setShow(true);\n    };\n    const ImageHandler = (e) => {\n        alert(e);\n    };\n\n    const columns = [\n        {title: '_id', field: '_id', hidden: true},\n\n        {title: 'category', field: 'category'},\n        {\n            title: 'subcategory',\n            field: 'subcategory'\n        }\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/admin/category/getCategory')\n            .then((res) => {\n                setData(res.data.categories);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.category === '') {\n            errorList.push('Please enter valid category');\n        }\n        if (newData.subcategory === '') {\n            errorList.push('Please enter valid subcategory');\n        }\n\n        if (errorList.length < 1) {\n            api.patch(\n                `/api/admin/category/addSubCategory/${newData._id}`,\n                newData\n            )\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData._id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                    toast.success(`Category updated  sucessfully !`);\n                })\n                .catch((error) => {\n                    toast.error(`Category updated  failed !`);\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowAdd = (newData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.category === undefined) {\n            errorList.push('Please enter category');\n        }\n        if (newData.subcategory === undefined) {\n            errorList.push('Please enter subcategory');\n        }\n\n        if (errorList.length < 1) {\n            // no error\n            api.post('/api/admin/category/addCategory', newData)\n                .then((res) => {\n                    const dataToAdd = [...data];\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    resolve();\n                    setErrorMessages([]);\n                    setIserror(false);\n                })\n                .catch((error) => {\n                    setErrorMessages(['Cannot add data. Server error!']);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(`/api/admin/category/${oldData._id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData._id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n                refreshPage();\n            })\n            .catch((error) => {\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12 col-m-6 col-sm-12\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true\n                        }}\n                        title=\"List of Categories\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        onRowClick={handleClick}\n                        editable={{\n                            // onRowUpdate: (newData, oldData) =>\n                            //     new Promise((resolve) => {\n                            //         handleRowUpdate(newData, oldData, resolve);\n                            //     }),\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData, resolve);\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve);\n                                })\n                        }}\n                    />\n                </div>\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Update Category</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <EditCategoryModal\n                            userId={userID}\n                            subcategory={subcategory}\n                            category={category}\n                        />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        </div>\n    );\n};\n\nexport default CategoryDataTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport CategoryDataTable from './CategoryDataTable';\n\nconst CategoryPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.category.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.category.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div>\n                        <CategoryDataTable />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default CategoryPage;\n","/* eslint-disable */\nimport React, {useState, useRef, useEffect} from 'react';\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Input from '@app/../node_modules/reactstrap/es/Input';\nimport Select from 'react-select';\nimport Loader from 'react-js-loader';\nimport {Redirect} from 'react-router-dom';\n\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nconst AddPrdouctPage = (props) => {\n    const items = [];\n    let SubCategoriesFound = [];\n    let SubCategoryObjectValues = [];\n    let SubCategoryLength;\n    let superText;\n\n    let optionalImages = [];\n\n    let selectedValue;\n    const [Category, setCategory] = useState([]);\n    const [QueryCategory, SetQueryCategory] = useState([]);\n    const [SubCategory, setSubCategory] = useState([]);\n\n    const [RecSubCategory, setRecSubCategory] = useState([]);\n\n    const [Spinner, setSpinner] = useState(false);\n\n    const [redirect, setredirect] = useState(false);\n\n    const [optinalImagesProduct, setoptinalImagesProduct] = useState([]);\n\n    const [recomdendSubcategory, setrecomdendSubcategory] = useState([]);\n\n    const [\n        selectedCategoryFromDropDown,\n        setselectedCategoryFromDropDown\n    ] = useState('');\n\n    const [\n        selectedRecommdedCategoryFromDropDown,\n        setselectedRecommdedCategoryFromDropDown\n    ] = useState('');\n\n    let finalArray = [];\n\n    let finalSubArray = [];\n\n    let finalrecomdendSubcategory = [];\n\n    const numbers = [1, 2, 3, 4, 5];\n\n    const api = axios.create({\n        baseURL: `https://badilnyint.com/`\n    });\n\n    const MakeItem = function (value) {\n        return (\n            <>\n                <option key={value} value={value}>\n                    {value}\n                </option>\n            </>\n        );\n    };\n\n    //useedddjvvjvv\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                // //SubCategoriesFound is an array\n\n                // const c = res.data.SubCategories[0]\n                // SubCategoriesFound =res.data.SubCategories[0]\n\n                // SubCategoryLength = SubCategoriesFound.length\n\n                // console.log(\"c\",c)\n                // console.log(\"cz\",SubCategoriesFound)\n                // console.log(\"czlen\", SubCategoryLength)\n\n                // const objectArray =  Object.entries(SubCategoriesFound[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value;\n                //  SubCategoryObjectValues = subArry\n\n                // console.log(\"values k:\",SubCategoryObjectValues); // 1\n\n                // });\n\n                //FilterDataCopy()\n\n                setSubCategory(res.data.SubCategories);\n                //let subs ;\n                //console.log(res.data)\n\n                //console.log(\"gggg\",SubCategory)\n                // const result =  Object.values(res.data.SubCategories);\n                //  setSubCategory(result)\n\n                // subs =  res.data.SubCategories\n\n                // const objectArray =  Object.entries(SubCategory[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value.subcategory;\n                //  setFilteredSubCat(subArry)\n                // const subArryLen = subArry.length;\n\n                //  setFiltredSubLen(subArryLen)\n                // console.log(\"values k:\",FilteredSubCat, FiltredSubLen); // 1\n\n                // });\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n        // do stuff\n        //console.log(\"cccccc\",selectedCategoryFromDropDown);\n    }, [selectedCategoryFromDropDown]);\n\n    //recommended sub category fetch\n    useEffect(() => {\n        axios\n            .get(\n                `https://badilnyint.com/api/admin/getSubs?CId=${selectedRecommdedCategoryFromDropDown}`\n            )\n            .then((res) => {\n                // //SubCategoriesFound is an array\n\n                // const c = res.data.SubCategories[0]\n                // SubCategoriesFound =res.data.SubCategories[0]\n\n                // SubCategoryLength = SubCategoriesFound.length\n\n                // console.log(\"c\",c)\n                // console.log(\"cz\",SubCategoriesFound)\n                // console.log(\"czlen\", SubCategoryLength)\n\n                // const objectArray =  Object.entries(SubCategoriesFound[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value;\n                //  SubCategoryObjectValues = subArry\n\n                // console.log(\"values k:\",SubCategoryObjectValues); // 1\n\n                // });\n\n                //FilterDataCopy()\n\n                setRecSubCategory(res.data.SubCategories);\n                //let subs ;\n                //console.log(res.data)\n\n                //console.log(\"gggg\",SubCategory)\n                // const result =  Object.values(res.data.SubCategories);\n                //  setSubCategory(result)\n\n                // subs =  res.data.SubCategories\n\n                // const objectArray =  Object.entries(SubCategory[0]);\n\n                // objectArray.forEach(async ([key, value]) => {\n                // console.log(\"key is h:\",key); // 'one'\n                // const subArry = value.subcategory;\n                //  setFilteredSubCat(subArry)\n                // const subArryLen = subArry.length;\n\n                //  setFiltredSubLen(subArryLen)\n                // console.log(\"values k:\",FilteredSubCat, FiltredSubLen); // 1\n\n                // });\n            })\n\n            .catch((err) => {\n                console.error(err);\n            });\n        // do stuff\n        //console.log(\"cccccc\",selectedCategoryFromDropDown);\n    }, [selectedRecommdedCategoryFromDropDown]);\n\n    useEffect(() => {\n        axios\n            .get('https://badilnyint.com/api/admin/getCats')\n            .then((res) => {\n                //console.log(\"cats\",res.data.Categories[0])\n\n                const cats = res.data.Categories;\n\n                const objectArray = Object.entries(cats[0]);\n\n                const intialCategory = objectArray[0];\n\n                const intialValues = Object.values(intialCategory);\n\n                const intialDropdownValue = intialValues[1].category;\n\n                //console.log(\"intial selected values\", intialDropdownValue)\n\n                setCategory(res.data.Categories);\n\n                setselectedCategoryFromDropDown(intialDropdownValue);\n                setselectedRecommdedCategoryFromDropDown(intialDropdownValue);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, []);\n\n    // const myFunction  = async (value, index, array) => {\n    //     //<p key={index}>hello{value}, {array[index]}</p>\n    //     //superText += value ;\n    //     //txt += \"<li>\" + value + \"</li>\";\n    //     // let fLen = array.length;\n    //     let z = Object.values(popArray)\n    //     superText+= \"<li>\" + value + \"</li>\"\n    //     superArray.push(value)\n\n    //     // let newz = popArray[0]\n    //     // let zlen = await newz;\n\n    //     // console.log(\"object values\",newz)\n    //     // console.log(\"type is newz\",typeof newz);\n    //     // console.log(\"new z length :\",fLen)\n    //     // console.log(\"type is z\",typeof z);\n\n    //     console.log(\"type of numbers\", typeof numbers)\n\n    //     z.forEach((element) => {\n\n    //        // txt += element[index] + \"<br>\";\n\n    //           console.log(\"ghh\",element)\n\n    //           document.getElementById(\"demo\").innerHTML = element ;\n    //           console.log(\"element is\",element)\n    //           items.push(<p key={index}>{element}</p>)\n    //          items.push(element)\n    //          console.log(typeof items)\n\n    //     });\n\n    //   }\n\n    // useEffect(() => {\n    // //    console.log(\"finalArray mount\",finalArray)\n    // //    console.log(\"type is\",typeof numbers);\n    //    console.log(\"type is\",typeof popArray);\n\n    //    popArray.forEach(myFunction);\n    //    text = superText;\n    //    //console.log(\"text\",text)\n    // }, [finalArray])\n\n    //   const subData = async () => {\n    //     axios.get(`http://localhost:8001/api/admin/getSubs?CId=mobiles`)\n    //     .then(async(res) => {\n    //         let subs ;\n    //         console.log(res.data)\n    //         const result = await Object.values(res.data.SubCategories);\n    //         await setSubCategory(result)\n\n    //         subs = await res.data.SubCategories\n\n    //         const objectArray = await Object.entries(SubCategory[0]);\n\n    //         objectArray.forEach(async ([key, value]) => {\n    //         console.log(\"key:\",key); // 'one'\n    //         const subArry = value.subcategory;\n    //         await setFilteredSubCat(subArry)\n    //         const subArryLen = subArry.length;\n\n    //         await setFiltredSubLen(subArryLen)\n    //         console.log(\"values:\",FilteredSubCat, FiltredSubLen); // 1\n\n    //         });\n\n    //             })\n    //             .catch(err => {\n    //                 console.error(err);\n    //             })\n    //   }\n\n    //    const dropHandler = async (e) => {\n\n    //    }\n\n    console.log(Category);\n\n    const {register, handleSubmit} = useForm();\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const [products, setProducts] = useState(optinalImagesProduct);\n\n    const fileInput = React.createRef();\n\n    const FileInputOne = React.createRef();\n    const FileInputtwo = React.createRef();\n    const FileInputthree = React.createRef();\n\n    const onChangeHandler = (e) => {\n        let {files} = e.target;\n\n        _.forEach(files, (file) => {\n            fd.append('files', file);\n        });\n    };\n\n    const onSubmit = async (data) => {\n        // still to resolve promise\n        console.log(\n            'onSubmitFn:',\n            data,\n            '  imageFile: ',\n            fileInput.current.files[0].name\n        );\n        const fd = new FormData();\n        for (var key in data) {\n            fd.append(key, data[key]); // formdata doesn't take objects\n        }\n\n        await fd.append(\n            'image',\n            fileInput.current.files[0],\n            fileInput.current.files[0].name\n        );\n\n        setSpinner(true);\n        api.post('/api/admin/postItem', fd)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`Product Added sucessfully !`);\n                setSpinner(false);\n                setredirect(true);\n            })\n            .catch((error) => {\n                console.log(error);\n                toast.error(`something went wrong`);\n            });\n    };\n    if (redirect) {\n        return <Redirect to=\"/products\" />;\n    }\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div>\n                        <div className=\"login-box\">\n                            <div className=\"card card-outline card-primary\">\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Title*</p>\n                                            <input\n                                                {...register('title', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"title\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Descreption*</p>\n                                            <input\n                                                {...register('description', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"Descreption\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Category*</p>\n                                            {Object.keys(Category).map(\n                                                (item, i) => (\n                                                    <select\n                                                        key={i}\n                                                        {...register(\n                                                            'category'\n                                                        )}\n                                                        className=\"form-control\"\n                                                        onChange={(e) => {\n                                                            selectedValue =\n                                                                e.target.value;\n                                                            console.log(\n                                                                selectedValue\n                                                            );\n                                                            setselectedCategoryFromDropDown(\n                                                                e.target.value\n                                                            );\n                                                            //   dropHandler(e)\n                                                            //{FilterDataCopy()}\n                                                        }}\n                                                        className=\"form-control\"\n                                                        placeholder=\"Category\"\n                                                    >\n                                                        {Category[i].map(\n                                                            (c, i) => (\n                                                                <>\n                                                                    <option\n                                                                        key={i}\n                                                                        value={\n                                                                            c.category\n                                                                        }\n                                                                    >\n                                                                        {\n                                                                            c.category\n                                                                        }\n                                                                    </option>\n                                                                </>\n                                                            )\n                                                        )}\n                                                    </select>\n                                                )\n                                            )}\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>SubCategory*</p>\n\n                                            {Object.entries(SubCategory).map(\n                                                (item, i) => (\n                                                    <select\n                                                        key={items}\n                                                        {...register(\n                                                            'subcategory',\n                                                            {\n                                                                required: true\n                                                            }\n                                                        )}\n                                                        className=\"form-control\"\n                                                        placeholder=\"subcategory\"\n                                                    >\n                                                        {SubCategory[i].map(\n                                                            (c, ix) => {\n                                                                let clen =\n                                                                    c\n                                                                        .subcategory\n                                                                        .length;\n                                                                for (\n                                                                    let index = ix;\n                                                                    index <\n                                                                    clen;\n                                                                    index++\n                                                                ) {\n                                                                    const element =\n                                                                        c.subcategory;\n                                                                    console.log(\n                                                                        index,\n                                                                        clen,\n                                                                        element[\n                                                                            index\n                                                                        ]\n                                                                    );\n\n                                                                    finalArray.push(\n                                                                        element[\n                                                                            index\n                                                                        ]\n                                                                    );\n                                                                }\n                                                            }\n                                                        )}\n\n                                                        {finalArray.map(\n                                                            MakeItem\n                                                        )}\n                                                    </select>\n                                                )\n                                            )}\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>RecommendCategory*</p>\n                                            {Object.keys(Category).map(\n                                                (item, i) => (\n                                                    <select\n                                                        key={i}\n                                                        {...register(\n                                                            'recommendCategory'\n                                                        )}\n                                                        className=\"form-control\"\n                                                        onChange={(e) => {\n                                                            selectedValue =\n                                                                e.target.value;\n                                                            console.log(\n                                                                selectedValue\n                                                            );\n                                                            setselectedRecommdedCategoryFromDropDown(\n                                                                e.target.value\n                                                            );\n                                                            //   dropHandler(e)\n                                                            //{FilterDataCopy()}\n                                                        }}\n                                                        className=\"form-control\"\n                                                        placeholder=\"recommendCategory\"\n                                                    >\n                                                        {Category[i].map(\n                                                            (c, i) => (\n                                                                <>\n                                                                    <option\n                                                                        key={i}\n                                                                        value={\n                                                                            c.category\n                                                                        }\n                                                                    >\n                                                                        {\n                                                                            c.category\n                                                                        }\n                                                                    </option>\n                                                                </>\n                                                            )\n                                                        )}\n                                                    </select>\n                                                )\n                                            )}\n                                        </div>\n\n                                        <div className=\"Field-group mb-3\">\n                                            <p>RecommendedSubCategory*</p>\n\n                                            {Object.entries(RecSubCategory).map(\n                                                (item, i) => (\n                                                    <select\n                                                        key={items}\n                                                        {...register(\n                                                            'recommendSubcategory',\n                                                            {\n                                                                required: true\n                                                            }\n                                                        )}\n                                                        className=\"form-control\"\n                                                    >\n                                                        {RecSubCategory[i].map(\n                                                            (c, ix) => {\n                                                                let clen =\n                                                                    c\n                                                                        .subcategory\n                                                                        .length;\n                                                                for (\n                                                                    let index = ix;\n                                                                    index <\n                                                                    clen;\n                                                                    index++\n                                                                ) {\n                                                                    const element =\n                                                                        c.subcategory;\n                                                                    console.log(\n                                                                        index,\n                                                                        clen,\n                                                                        element[\n                                                                            index\n                                                                        ]\n                                                                    );\n\n                                                                    finalSubArray.push(\n                                                                        element[\n                                                                            index\n                                                                        ]\n                                                                    );\n                                                                }\n                                                            }\n                                                        )}\n\n                                                        {finalSubArray.map(\n                                                            MakeItem\n                                                        )}\n                                                    </select>\n                                                )\n                                            )}\n                                        </div>\n\n                                        <div className=\"Field-group mb-3\">\n                                            <input\n                                                {...register('creator', {\n                                                    required: true\n                                                })}\n                                                hidden\n                                                value={GetCurrentUser().userId}\n                                                className=\"form-control\"\n                                                placeholder=\"creator\"\n                                            />\n                                        </div>\n\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Image*</p>\n                                            <input\n                                                required\n                                                multiple\n                                                ref={fileInput}\n                                                type=\"file\"\n                                                className=\"form-control\"\n                                                placeholder=\"Please choose Image\"\n                                            />\n                                        </div>\n\n                                        <div className=\"Field-group mb-3\">\n                                            <p>isFeatured*</p>\n                                            <select\n                                                className=\"form-control\"\n                                                {...register('isFeatured', {\n                                                    required: true\n                                                })}\n                                            >\n                                                <option value=\"true\">\n                                                    True\n                                                </option>\n                                                <option value=\"false\">\n                                                    False\n                                                </option>\n                                            </select>\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Status*</p>\n                                            <select\n                                                className=\"form-control\"\n                                                {...register('status', {\n                                                    required: true\n                                                })}\n                                            >\n                                                <option value=\"active\">\n                                                    active\n                                                </option>\n                                                <option value=\"inactive\">\n                                                    inactive\n                                                </option>\n                                            </select>\n                                        </div>\n\n                                        <div className=\"Field-group mb-3\">\n                                            <p>Qunatity*</p>\n\n                                            <input\n                                                {...register('quantity', {\n                                                    required: true\n                                                })}\n                                                type=\"number\"\n                                                className=\"form-control\"\n                                                placeholder=\"quantity\"\n                                            />\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\"\n                                                >\n                                                    {t('product.addProduct')}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                                {Spinner ? (\n                                    <Loader\n                                        type=\"spinner-circle\"\n                                        className=\"mt-5\"\n                                        bgColor={'#000000'}\n                                        title={'...loading'}\n                                        size={50}\n                                    />\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default AddPrdouctPage;\n","/* eslint-disable */\nimport React, {Component} from 'react';\nimport Loader from 'react-js-loader';\nimport {Redirect} from 'react-router-dom';\n\nimport axios from 'axios';\nimport {toast} from 'react-toastify';\n\nimport './style.css';\n\nclass ImageUpdate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: '',\n            title: '',\n            description: '',\n            hyperLink:'',\n            spinner: false,\n            redirect: false,\n        };\n    }\n    onChange = (e) => {\n        if (e.target.type === 'file') {\n            // Assuming only image\n            let file = this.refs.image.files[0];\n            let reader = new FileReader();\n            let url = reader.readAsDataURL(file);\n\n            reader.onloadend = (e) => {\n                this.setState({imageUrl: [reader.result], image: file});\n            };\n        }\n\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value});\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('image', this.state.image);\n        formData.append('description', this.state.description);\n        formData.append('title', this.state.title);\n        formData.append('hyperLink', this.state.hyperLink);\n\n\n        this.setState({spinner: true});\n        // still to resolve promise\n        axios\n            .post('https://badilnyint.com/api/admin/adds/addImages', formData)\n            .then((res) => {\n                console.log(res.data);\n                toast.success(`Advertisement uploaded  sucessfully !`);\n                this.setState({spinner: false});\n                this.setState({redirect: true});\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n            });\n    };\n\n    render() {\n        const {imageUrl, description, title, redirect , hyperLink}  = this.state;\n\n        if (redirect) {\n            return <Redirect to=\"/Adds\" />;\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-md-center\">\n                    <div className=\"col-12 col-sm-6  form-wrapper\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"profile-div\">\n                                {this.state.imageUrl ? (\n                                    <div className=\"col-12 col-sm-4\">\n                                        <img\n                                            width=\"50%\"\n                                            src={imageUrl}\n                                            onClick={() =>\n                                                this.refs.image.click()\n                                            }\n                                            className=\"img-placeholder\"\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                ) : (\n                                    <div\n                                        className=\"img-placeholder\"\n                                        onClick={() => this.refs.image.click()}\n                                    ></div>\n                                )}\n                                <b>\n                                    <span>Image*</span>\n                                </b>\n                                <input\n                                    required\n                                    type=\"file\"\n                                    ref=\"image\"\n                                    onChange={this.onChange}\n                                    className=\"hidden\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"label \">Title*</label>\n                                <input\n                                    required\n                                    name=\"title\"\n                                    value={title}\n                                    onChange={this.onChange}\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"label \">description</label>\n                                <input\n                                    name=\"description\"\n                                    value={description}\n                                    onChange={this.onChange}\n                                    className=\"form-control\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"label \">hyperLink*</label>\n                                <input\n                                    required\n                                    name=\"hyperLink\"\n                                    value={hyperLink}\n                                    onChange={this.onChange}\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block\"\n                                >\n                                    Upload Advertisement Images\n                                </button>\n                            </div>\n                        </form>\n\n                        {this.state.spinner ? (\n                            <Loader\n                                type=\"spinner-circle\"\n                                className=\"mt-5\"\n                                bgColor={'#000000'}\n                                title={'...loading'}\n                                size={50}\n                            />\n                        ) : null}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ImageUpdate;\n","import React from 'react';\nimport ImageUpdate from './ImageUpdate';\n\nconst AddAdvertisementImage = () => {\n    return (\n        <div>\n            <ImageUpdate />\n        </div>\n    );\n};\nexport default AddAdvertisementImage;\n","/* eslint-disable */\nimport {Formik, Field, Form} from 'formik';\nimport {useForm} from 'react-hook-form';\nimport React, {useState, useRef, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\nimport Input from '@app/../node_modules/reactstrap/es/Input';\n\nconst AddCategoryPage = (props) => {\n    const {register, handleSubmit} = useForm();\n    const [cat, setcat] = useState([]);\n    const [sub, setsub] = useState([]);\n    const [ImageValue, setImageValue] = useState('');\n    const [t] = useTranslation();\n    const fileInput = React.createRef();\n    const [data, setData] = useState([]);\n    let cid = '60dd83de9222441f460bb915';\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    const getUsers = async () => {\n        // We're using axios instead of Fetch\n        axios\n            // The API we're requesting data from\n            .get(`https://badilnyint.com/api/admin/category/getCategory`)\n            // Once we get a response, we'll map the API endpoints to our props\n            .then((res) => {\n                setData(res.data);\n                toast.success(`Category uploaded  sucessfully !`);\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n            });\n\n        data.categories.forEach(function (data, index, array) {\n            console.log(data.subcategory, data.category, index);\n            setsub(data.subcategory);\n            setcat(data.category);\n        });\n    };\n\n    const onSubmit = (data) => {\n        // still to resolve promise\n\n        // console.log(\n        //     'onSubmitFn:',\n        //     data,\n        //     '  imageFile: ',\n        //     fileInput.current.files[0].name\n        // );\n        const fd = new FormData();\n        for (var key in data) {\n            fd.append(key, data[key]); // formdata doesn't take objects\n        }\n\n        // fd.append(\n        //     'image',\n        //     fileInput.current.files[0],\n        //     fileInput.current.files[0].name\n        // );\n\n        axios\n            .post('https://badilnyint.com/api/admin/category/addCategory', data)\n            .then((res) => {\n                console.log(res.data);\n\n                toast.success(`Category uploaded  sucessfully !`);\n            })\n            .catch((error) => {\n                console.log('Error');\n                toast.error(`something went wrong`);\n            });\n    };\n\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div>\n                        <div className=\"login-box\">\n                            <div className=\"card card-outline card-primary\">\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n                                        <div className=\"Field-group mb-3\">\n                                            <input\n                                                {...register('category', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"Category\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <input\n                                                {...register('subcategory[]', {\n                                                    required: true\n                                                })}\n                                                className=\"form-control\"\n                                                placeholder=\"subcategory\"\n                                            />\n                                        </div>\n                                        <div className=\"Field-group mb-3\">\n                                            <select\n                                                className=\"form-control\"\n                                                {...register('isFeatured', {\n                                                    required: true\n                                                })}\n                                            >\n                                                <option>{cat}</option>\n                                            </select>\n                                        </div>\n\n                                        <div className=\"Field-group mb-3\">\n                                            <select\n                                                className=\"form-control\"\n                                                {...register('isFeatured', {\n                                                    required: true\n                                                })}\n                                            >\n                                                {sub.map((d, i) => {\n                                                    <option key={i}>\n                                                        {' '}\n                                                        {d}\n                                                    </option>;\n                                                })}\n\n                                                <option value=\"true\">\n                                                    yes\n                                                </option>\n                                                <option value=\"false\">\n                                                    False\n                                                </option>\n                                            </select>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\"\n                                                >\n                                                    {t('category.addCategory')}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default AddCategoryPage;\n","import React, {useState, useEffect, forwardRef} from 'react';\n/* eslint-disable */\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst api = axios.create({\n    baseURL: `https://badilnyint.com`\n});\n\nconst PaymentsDataTable = () => {\n    const columns = [\n        {title: 'id', field: 'id', hidden: true},\n        {\n            title: 'Name',\n            field: 'Name'\n        },\n        {title: 'Number', field: 'Number'},\n\n        {title: 'Email', field: 'Email'},\n        {title: 'Subject', field: 'Subject'},\n        {title: 'Message', field: 'Message'}\n    ];\n    const [data, setData] = useState([]); // table data\n\n    // for error handling\n    const [iserror, setIserror] = useState(false);\n    const [errorMessages, setErrorMessages] = useState([]);\n\n    useEffect(() => {\n        api.get('/api/user/getContactTickets')\n            .then((res) => {\n                setData(res.data.contactUs);\n            })\n            .catch((error) => {\n                console.log('Error');\n            });\n    }, []);\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        // validation\n        const errorList = [];\n        if (newData.title === '') {\n            errorList.push('Please enter valid title');\n        }\n        if (newData.description === '') {\n            errorList.push('Please enter valid description');\n        }\n\n        if (errorList.length < 1) {\n            api.patch(`/api/product/${newData.id}`, newData)\n                .then((res) => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve();\n                    setIserror(false);\n                    setErrorMessages([]);\n                })\n                .catch((error) => {\n                    setErrorMessages([`Update failed! Server error${error}`]);\n                    setIserror(true);\n                    resolve();\n                });\n        } else {\n            setErrorMessages(errorList);\n            setIserror(true);\n            resolve();\n        }\n    };\n\n    // const handleRowAdd = (newData, resolve) => {\n    //     // validation\n    //     const errorList = [];\n    //     if (newData.first_name === undefined) {\n    //         errorList.push('Please enter first name');\n    //     }\n    //     if (newData.last_name === undefined) {\n    //         errorList.push('Please enter last name');\n    //     }\n    //     if (\n    //         newData.email === undefined ||\n    //         validateEmail(newData.email) === false\n    //     ) {\n    //         errorList.push('Please enter a valid email');\n    //     }\n\n    //     if (errorList.length < 1) {\n    //         // no error\n    //         api.post('/users', newData)\n    //             .then((res) => {\n    //                 const dataToAdd = [...data];\n    //                 dataToAdd.push(newData);\n    //                 setData(dataToAdd);\n    //                 resolve();\n    //                 setErrorMessages([]);\n    //                 setIserror(false);\n    //             })\n    //             .catch((error) => {\n    //                 setErrorMessages(['Cannot add data. Server error!']);\n    //                 setIserror(true);\n    //                 resolve();\n    //             });\n    //     } else {\n    //         setErrorMessages(errorList);\n    //         setIserror(true);\n    //         resolve();\n    //     }\n    // };\n\n    const handleRowDelete = (oldData, resolve) => {\n        const pid = api\n            .delete(`/api/product/${oldData.id}`)\n            .then((res) => {\n                console.log(oldData.id);\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve();\n            })\n            .catch((error) => {\n                setErrorMessages(['Delete failed! Server error']);\n                setIserror(true);\n                resolve();\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={2}>\n                <Grid item />\n                <Grid item md={12}>\n                    <div>\n                        {iserror && (\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>;\n                                })}\n                            </Alert>\n                        )}\n                    </div>\n                </Grid>\n                <Grid item />\n            </Grid>\n            <div className=\"row\">\n                <div className=\"col-lg-12 col-md-8 col-sm-12\">\n                    <MaterialTable\n                        options={{\n                            exportButton: true,\n                            filtering: true\n                        }}\n                        title=\"List of Feedbacks\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        // editable={{\n                        //     onRowUpdate: (newData, oldData) =>\n                        //         new Promise((resolve) => {\n                        //             handleRowUpdate(newData, oldData, resolve);\n                        //         }),\n                        //     // onRowAdd: (newData) =>\n                        //     //     new Promise((resolve) => {\n                        //     //         handleRowAdd(newData, resolve);\n                        //     //     }),\n                        //     onRowDelete: (oldData) =>\n                        //         new Promise((resolve) => {\n                        //             handleRowDelete(oldData, resolve);\n                        //         })\n                        // }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentsDataTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport ContactUsDataTable from './ContactUsDataTable';\n\nconst ContactUsPage = () => {\n    const [t] = useTranslation();\n    return (\n        <>\n            <section className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-6\">\n                            <h1>{t('header.contactus.title')}</h1>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <ol className=\"breadcrumb float-sm-right\">\n                                <li className=\"breadcrumb-item\">\n                                    <Link to=\"/\">{t('header.label.home')}</Link>\n                                </li>\n                                <li className=\"breadcrumb-item active\">\n                                    {t('views.contactus.link')}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <ContactUsDataTable />\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default ContactUsPage;\n","import React, {useState, useEffect} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Gatekeeper} from 'gatekeeper-client-sdk';\n\nimport Dashboard from '@pages/Dashboard';\nimport Profile from '@pages/profile/Profile';\n\nimport Users from '@app/pages/Users/Users';\nimport ProductsPage from '@app/pages/Products/ProductsPage';\nimport AdminsPage from '@app/pages/Admin/AdminPage';\nimport AddSliderImage from '@app/pages/Slider/AddSliderImage';\nimport TradesPage from '@app/pages/Trades/TradesPage';\nimport Header from './header/Header';\nimport Footer from './footer/Footer';\nimport MenuSidebar from './menu-sidebar/MenuSidebar';\nimport PageLoading from '../../components/page-loading/PageLoading';\nimport * as ActionTypes from '../../store/actions';\nimport PlansPage from '../../pages/Plans/PlansPage';\nimport NotificationsPage from '../../pages/Notifications/NotificationPage';\nimport PaymentsPage from '../../pages/Payments/PaymentsPage';\nimport SliderPage from '../../pages/Slider/SliderPage';\nimport AddsPage from '../../pages/Advertisement/AddsPage';\nimport ChangePassword from '../../pages/ChangePassword/ChangePassword';\nimport CategoryPage from '../../pages/Category/CategoryPage';\nimport AddPrdouctPage from '../../pages/Products/AddProductPage';\nimport AddAdvertisementImage from '../../pages/Advertisement/AddAdvertisementImage';\nimport AddCategoryPage from '../../pages/Category/AddCategoryPage';\nimport ContactUsPage from '../../pages/ContactUS/ContactUsPage';\n\nconst Main = ({onUserLoad}) => {\n    const [appLoadingState, updateAppLoading] = useState(false);\n    const [menusidebarState, updateMenusidebarState] = useState({\n        isMenuSidebarCollapsed: false\n    });\n\n    const toggleMenuSidebar = () => {\n        updateMenusidebarState({\n            isMenuSidebarCollapsed: !menusidebarState.isMenuSidebarCollapsed\n        });\n    };\n\n    useEffect(() => {\n        updateAppLoading(true);\n        const fetchProfile = async () => {\n            try {\n                const response = await Gatekeeper.getProfile();\n                onUserLoad({...response});\n                updateAppLoading(false);\n            } catch (error) {\n                updateAppLoading(false);\n            }\n        };\n        fetchProfile();\n        return () => {};\n    }, [onUserLoad]);\n\n    document.getElementById('root').classList.remove('register-page');\n    document.getElementById('root').classList.remove('login-page');\n    document.getElementById('root').classList.remove('hold-transition');\n\n    document.getElementById('root').className += ' sidebar-mini';\n\n    if (menusidebarState.isMenuSidebarCollapsed) {\n        document.getElementById('root').classList.add('sidebar-collapse');\n        document.getElementById('root').classList.remove('sidebar-open');\n    } else {\n        document.getElementById('root').classList.add('sidebar-open');\n        document.getElementById('root').classList.remove('sidebar-collapse');\n    }\n\n    let template;\n\n    if (appLoadingState) {\n        template = <PageLoading />;\n    } else {\n        template = (\n            <>\n                <Header toggleMenuSidebar={toggleMenuSidebar} />\n\n                <MenuSidebar />\n                <div className=\"content-wrapper\">\n                    <div className=\"pt-3\" />\n                    <section className=\"content\">\n                        <Switch>\n                            <Route exact path=\"/Adds\" component={AddsPage} />\n\n                            <Route\n                                exact\n                                path=\"/slider\"\n                                component={SliderPage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/notifications\"\n                                component={NotificationsPage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/payments\"\n                                component={PaymentsPage}\n                            />\n\n                            <Route exact path=\"/plans\" component={PlansPage} />\n\n                            <Route\n                                exact\n                                path=\"/products\"\n                                component={ProductsPage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/adminPage\"\n                                component={AdminsPage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/categoriesPage\"\n                                component={CategoryPage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/changePassword\"\n                                component={ChangePassword}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/AddProductPage\"\n                                component={AddPrdouctPage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/AddSliderImage\"\n                                component={AddSliderImage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/AddAdvertisement\"\n                                component={AddAdvertisementImage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/AddCategoryPage\"\n                                component={AddCategoryPage}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/TradesPage\"\n                                component={TradesPage}\n                            />\n                            <Route\n                                exact\n                                path=\"/ContactUsPage\"\n                                component={ContactUsPage}\n                            />\n\n                            <Route exact path=\"/profile\" component={Profile} />\n                            <Route exact path=\"/users\" component={Users} />\n                            <Route exact path=\"/\" component={Dashboard} />\n                        </Switch>\n                    </section>\n                </div>\n                <Footer />\n                <div\n                    id=\"sidebar-overlay\"\n                    role=\"presentation\"\n                    onClick={toggleMenuSidebar}\n                    onKeyDown={() => {}}\n                />\n            </>\n        );\n    }\n\n    return <div className=\"wrapper\">{template}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.currentUser\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLoad: (user) =>\n        dispatch({type: ActionTypes.LOAD_USER, currentUser: user})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","export const Authload = async () => {\n    await JSON.parse(localStorage.getItem('user'));\n    return Authload;\n};\n\nexport const Reload = () => {\n    window.location.reload();\n};\n\nexport default Authload;\n","import {Authload} from '@app/store/reducers/Authload';\nimport * as ActionTypes from '../actions';\n\nexport const GetCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nconst initialState = {\n    isLoggedIn: !!localStorage.getItem('token'),\n    token: localStorage.getItem('token'),\n    currentUser: {\n        email: GetCurrentUser() ? `${GetCurrentUser().email}` : '',\n        picture: null\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_USER:\n            localStorage.setItem('token', action.token);\n\n            return {\n                ...state,\n                isLoggedIn: true,\n                token: action.token\n            };\n        case ActionTypes.LOGOUT_USER:\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n\n            return {\n                ...state,\n                isLoggedIn: false,\n                token: null,\n                currentUser: {\n                    email: Authload().email,\n                    picture: null\n                }\n            };\n        case ActionTypes.LOAD_USER:\n            return {\n                ...state,\n                currentUser: action.currentUser\n            };\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;\n","import {createStore, combineReducers} from 'redux';\nimport authReducer from './reducers/auth';\n\nconst rootReducer = combineReducers({\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import axios from 'axios';\nimport store from '../store/index';\nimport * as ActionTypes from '../store/actions';\n\nconst intance = axios.create({\n    baseURL: `${process.env.REACT_APP_GATEKEEPER_URL}`\n});\n\nintance.interceptors.request.use((Authload) => {\n    JSON.parse(localStorage.getItem('user'));\n\n    return Authload;\n});\n\nintance.interceptors.request.use(\n    (request) => {\n        const {token} = store.getState().auth;\n        if (token) {\n            request.headers.Authorization = `Bearer ${token}`;\n        }\n        return request;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nintance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response.data.status === 401) {\n            store.dispatch({type: ActionTypes.LOGOUT_USER});\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default intance;\n","import {Gatekeeper} from 'gatekeeper-client-sdk';\n\nimport axios from '../utils/axios';\nimport {addFacebookScript} from '../utils/social-auth-scripts';\n\nexport const loginByAuth = async (email, password) => {\n    return axios\n        .post('https://badilnyint.com/api/admin/login', {\n            email,\n            password\n        })\n        .then((response) => {\n            if (response.data.token) {\n                localStorage.setItem('user', JSON.stringify(response.data));\n            }\n            document.getElementById('root').classList.remove('login-page');\n            document.getElementById('root').classList.remove('hold-transition');\n            const {token} = response.data;\n            return token;\n        });\n};\n\nexport const getCurrentUser = () => {\n    const C = JSON.parse(localStorage.getItem('user'));\n    return C;\n};\n\nexport const registerByAuth = async (email, password) => {\n    const token = await Gatekeeper.registerByAuth(email, password);\n    localStorage.setItem('token', token);\n    document.getElementById('root').classList.remove('register-page');\n    document.getElementById('root').classList.remove('hold-transition');\n    return token;\n};\n\nexport const loginByGoogle = async () => {\n    const token = await Gatekeeper.loginByGoogle();\n    localStorage.setItem('token', token);\n    document.getElementById('root').classList.remove('login-page');\n    document.getElementById('root').classList.remove('hold-transition');\n    return token;\n};\n\nexport const registerByGoogle = async () => {\n    const token = await Gatekeeper.registerByGoogle();\n    localStorage.setItem('token', token);\n    document.getElementById('root').classList.remove('register-page');\n    document.getElementById('root').classList.remove('hold-transition');\n    return token;\n};\n\nconst asyncFacebookGetLoginStatus = () => {\n    return new Promise((resolve, reject) => {\n        addFacebookScript()\n            .then(() => {\n                const params = {\n                    appId: '243170807046422',\n                    cookie: false,\n                    xfbml: false,\n                    version: 'v3.2'\n                };\n                window.FB.init(params);\n                window.FB.getLoginStatus((data) => {\n                    if (data.status === 'connected') {\n                        resolve(data.authResponse.accessToken);\n                    }\n                    resolve(null);\n                });\n            })\n            .catch(() => reject(new Error('ADD_SCRIPT_ERROR')));\n    });\n};\n\nconst asyncFacebookLogin = () => {\n    return new Promise((resolve, reject) => {\n        window.FB.login(\n            (data) => {\n                if (data.status === 'connected') {\n                    resolve(data.authResponse.accessToken);\n                }\n                reject(new Error('FACEBOOK_ERROR'));\n            },\n            {scope: 'email'}\n        );\n    });\n};\n\nexport const loginByFacebook = () => {\n    return asyncFacebookGetLoginStatus()\n        .then((accessToken) => {\n            if (accessToken) {\n                return Promise.resolve(accessToken);\n            }\n            return asyncFacebookLogin();\n        })\n        .then((accessToken) => {\n            return axios.post('/v1/facebook/login', {\n                accessToken\n            });\n        })\n        .then((response) => {\n            localStorage.setItem('token', response.data.token);\n            document.getElementById('root').classList.remove('login-page');\n            document.getElementById('root').classList.remove('hold-transition');\n            return Promise.resolve(response.data.token);\n        });\n};\n\nexport const registerByFacebook = () => {\n    return asyncFacebookGetLoginStatus()\n        .then((accessToken) => {\n            if (accessToken) {\n                return Promise.resolve(accessToken);\n            }\n            return asyncFacebookLogin();\n        })\n        .then((accessToken) => {\n            return axios.post('/v1/facebook/register', {\n                accessToken\n            });\n        })\n        .then((response) => {\n            localStorage.setItem('token', response.data.token);\n            document.getElementById('root').classList.remove('register-page');\n            document.getElementById('root').classList.remove('hold-transition');\n            return Promise.resolve(response.data.token);\n        });\n};\n","import React, {useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {toast} from 'react-toastify';\nimport {connect} from 'react-redux';\nimport {useFormik} from 'formik';\nimport {useTranslation} from 'react-i18next';\n\nimport * as Yup from 'yup';\n\nimport * as AuthService from '../../services/auth';\nimport Button from '../../components/button/Button';\nimport * as ActionTypes from '../../store/actions';\n\nconst Login = ({onUserLogin}) => {\n    const [isAuthLoading, setAuthLoading] = useState(false);\n    // const [isGoogleAuthLoading, setGoogleAuthLoading] = useState(false);\n    // const [isFacebookAuthLoading, setFacebookAuthLoading] = useState(false);\n\n    const history = useHistory();\n    const [t] = useTranslation();\n\n    const login = (email, password) => {\n        setAuthLoading(true);\n        AuthService.loginByAuth(email, password)\n            .then((token) => {\n                toast.success('Login is succeed!');\n                setAuthLoading(false);\n                onUserLogin(token);\n                history.push('/');\n            })\n            .catch((error) => {\n                setAuthLoading(false);\n                toast.error(\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                        'Failed'\n                );\n            });\n    };\n\n    // const loginByGoogle = () => {\n    //     setGoogleAuthLoading(true);\n    //     AuthService.loginByGoogle()\n    //         .then((token) => {\n    //             toast.success('Login is succeeded!');\n    //             setGoogleAuthLoading(false);\n    //             onUserLogin(token);\n    //             history.push('/');\n    //         })\n    //         .catch((error) => {\n    //             setGoogleAuthLoading(false);\n    //             toast.error(\n    //                 (error.response &&\n    //                     error.response.data &&\n    //                     error.response.data.message) ||\n    //                     'Failed'\n    //             );\n    //         });\n    // };\n\n    // const loginByFacebook = () => {\n    //     setFacebookAuthLoading(true);\n\n    //     AuthService.loginByFacebook()\n    //         .then((token) => {\n    //             toast.success('Login is succeeded!');\n    //             setFacebookAuthLoading(false);\n    //             onUserLogin(token);\n\n    //             history.push('/');\n    //         })\n    //         .catch((error) => {\n    //             setFacebookAuthLoading(false);\n    //             toast.error(\n    //                 (error.response &&\n    //                     error.response.data &&\n    //                     error.response.data.message) ||\n    //                     'Failed'\n    //             );\n    //         });\n    // };\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('Invalid email address')\n                .required('Required'),\n            password: Yup.string()\n                .min(5, 'Must be 5 characters or more')\n                .max(30, 'Must be 30 characters or less')\n                .required('Required')\n        }),\n        onSubmit: (values) => {\n            login(values.email, values.password);\n        }\n    });\n\n    document.getElementById('root').classList = 'hold-transition login-page';\n\n    return (\n        <div className=\"login-box\">\n            <div className=\"card card-outline card-primary\">\n                <div className=\"card-header text-center\">\n                    <Link to=\"/\" className=\"h1\">\n                        <b>Badilny</b>\n                    </Link>\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"login-box-msg\">{t('login.label.signIn')}</p>\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"mb-3\">\n                            <div className=\"input-group\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    {...formik.getFieldProps('email')}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-envelope\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {formik.touched.email && formik.errors.email ? (\n                                <div>{formik.errors.email}</div>\n                            ) : null}\n                        </div>\n                        <div className=\"mb-3\">\n                            <div className=\"input-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    {...formik.getFieldProps('password')}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {formik.touched.password &&\n                            formik.errors.password ? (\n                                <div>{formik.errors.password}</div>\n                            ) : null}\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-8\">\n                                {/* <div className=\"icheck-primary\">\n                                    <input type=\"checkbox\" id=\"remember\" />\n                                    <label htmlFor=\"remember\">\n                                        {t('login.label.rememberMe')}\n                                    </label>\n                                </div> */}\n                            </div>\n                            <div className=\"col-4\">\n                                <Button\n                                    block\n                                    type=\"submit\"\n                                    isLoading={isAuthLoading}\n                                    // disabled={\n                                    //     isFacebookAuthLoading ||\n                                    //     isGoogleAuthLoading\n                                    // }\n                                >\n                                    {t('login.button.signIn.label')}\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                    {/* <p className=\"mb-1\">\n                        <Link to=\"/forgot-password\">\n                            {t('login.label.forgotPass')}\n                        </Link>\n                    </p> */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLogin: (token) => dispatch({type: ActionTypes.LOGIN_USER, token})\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, {useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {toast} from 'react-toastify';\nimport {useFormik} from 'formik';\nimport {useTranslation} from 'react-i18next';\nimport * as Yup from 'yup';\n\nimport {Button} from '@components';\nimport * as AuthService from '../../services/auth';\nimport * as ActionTypes from '../../store/actions';\n\nconst Register = ({onUserLogin}) => {\n    const [isAuthLoading, setAuthLoading] = useState(false);\n    const [t] = useTranslation();\n\n    const history = useHistory();\n\n    const register = (email, password) => {\n        setAuthLoading(true);\n        AuthService.registerByAuth(email, password)\n            .then((token) => {\n                setAuthLoading(false);\n                onUserLogin(token);\n                toast.success('Registration is success');\n                history.push('/');\n            })\n            .catch((error) => {\n                toast.error(\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                        'Failed'\n                );\n                setAuthLoading(false);\n            });\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            passwordRetype: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('Invalid email address')\n                .required('Required'),\n            password: Yup.string()\n                .min(5, 'Must be 5 characters or more')\n                .max(30, 'Must be 30 characters or less')\n                .required('Required'),\n            passwordRetype: Yup.string()\n                .min(5, 'Must be 5 characters or more')\n                .max(30, 'Must be 30 characters or less')\n                .required('Required')\n                .when('password', {\n                    is: (val) => !!(val && val.length > 0),\n                    then: Yup.string().oneOf(\n                        [Yup.ref('password')],\n                        'Both password need to be the same'\n                    )\n                })\n        }),\n        onSubmit: (values) => {\n            register(values.email, values.password);\n        }\n    });\n\n    document.getElementById('root').classList = 'hold-transition register-page';\n\n    return (\n        <div className=\"register-box\">\n            <div className=\"card card-outline card-primary\">\n                <div className=\"card-header text-center\">\n                    <Link to=\"/\" className=\"h1\">\n                        <b>badilny</b>\n                    </Link>\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"login-box-msg\">{t('register.registerNew')}</p>\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"mb-3\">\n                            <div className=\"input-group\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    {...formik.getFieldProps('email')}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-envelope\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {formik.touched.email && formik.errors.email ? (\n                                <div>{formik.errors.email}</div>\n                            ) : null}\n                        </div>\n                        <div className=\"mb-3\">\n                            <div className=\"input-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    {...formik.getFieldProps('password')}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {formik.touched.password &&\n                            formik.errors.password ? (\n                                <div>{formik.errors.password}</div>\n                            ) : null}\n                        </div>\n\n                        <div className=\"mb-3\">\n                            <div className=\"input-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Retype password\"\n                                    {...formik.getFieldProps('passwordRetype')}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {formik.touched.passwordRetype &&\n                            formik.errors.passwordRetype ? (\n                                <div>{formik.errors.passwordRetype}</div>\n                            ) : null}\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-8\">\n                                <div className=\"icheck-primary\">\n                                    <input\n                                        type=\"checkbox\"\n                                        id=\"agreeTerms\"\n                                        name=\"terms\"\n                                        defaultValue=\"agree\"\n                                    />\n                                    <label htmlFor=\"agreeTerms\">\n                                        <span>I agree to the </span>\n                                        <Link to=\"/\">terms</Link>\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"col-4\">\n                                <Button\n                                    type=\"submit\"\n                                    block\n                                    isLoading={isAuthLoading}\n                                >\n                                    {t('register.label')}\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                    <Link to=\"/login\" className=\"text-center\">\n                        {t('register.alreadyHave')}\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLogin: (token) => dispatch({type: ActionTypes.LOGIN_USER, token})\n});\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {toast} from 'react-toastify';\nimport {useTranslation} from 'react-i18next';\n\nconst ForgotPassword = () => {\n    const [t] = useTranslation();\n    let emailInput = null;\n\n    const setEmailInputRef = (element) => {\n        emailInput = element;\n    };\n\n    const requestNewPassword = (event) => {\n        toast.warn('Henüz fonksiyonel değil!');\n        // eslint-disable-next-line no-console\n        console.log(emailInput);\n        event.preventDefault();\n    };\n\n    document.getElementById('root').classList = 'hold-transition login-page';\n\n    return (\n        <div className=\"login-box\">\n            <div className=\"card card-outline card-primary\">\n                <div className=\"card-header text-center\">\n                    <Link to=\"/\" className=\"h1\">\n                        <b>{process.env.PROJECT_TITLE}</b>\n                    </Link>\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"login-box-msg\">\n                        {t('recover.forgotYourPassword')}\n                    </p>\n                    <form onSubmit={requestNewPassword}>\n                        <div className=\"input-group mb-3\">\n                            <input\n                                ref={setEmailInputRef}\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                            />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fas fa-envelope\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block\"\n                                >\n                                    {t('recover.requestNewPassword')}\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                    <p className=\"mt-3 mb-1\">\n                        <Link to=\"/login\">\n                            {t('login.button.signIn.label')}\n                        </Link>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ForgotPassword;\n","import React, {useRef} from 'react';\nimport {toast} from 'react-toastify';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\n\nconst RecoverPassword = () => {\n    const passwordInput = useRef(null);\n    const confirmPasswordInput = useRef(null);\n    const [t] = useTranslation();\n\n    const confirm = (event) => {\n        toast.warn('Henüz fonksiyonel değil!');\n        event.preventDefault();\n    };\n\n    document.getElementById('root').classList = 'hold-transition login-page';\n\n    return (\n        <div className=\"login-box\">\n            <div className=\"card card-outline card-primary\">\n                <div className=\"card-header text-center\">\n                    <Link to=\"/\" className=\"h1\">\n                        <b>Admin</b>\n                        <span>LTE</span>\n                    </Link>\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"login-box-msg\">{t('recover.oneStepAway')}</p>\n                    <form onSubmit={confirm}>\n                        <div className=\"input-group mb-3\">\n                            <input\n                                ref={passwordInput}\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                            />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fas fa-lock\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <input\n                                ref={confirmPasswordInput}\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Confirm Password\"\n                            />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fas fa-lock\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block\"\n                                >\n                                    {t('recover.changePassword')}\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                    <p className=\"mt-3 mb-1\">\n                        <Link to=\"/login\">\n                            {t('login.button.signIn.label')}\n                        </Link>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RecoverPassword;\n","import React from 'react';\n\nconst PrivacyPolicy = () => {\n    return (\n        <>\n            <strong>Privacy Policy</strong>\n            <p>\n                Erdi Köse built the Admin LTE app as an Open Source app. This\n                SERVICE is provided by Erdi Köse at no cost and is intended for\n                use as is.\n            </p>\n            <p>\n                This page is used to inform visitors regarding my policies with\n                the collection, use, and disclosure of Personal Information if\n                anyone decided to use my Service.\n            </p>\n            <p>\n                If you choose to use my Service, then you agree to the\n                collection and use of information in relation to this policy.\n                The Personal Information that I collect is used for providing\n                and improving the Service. I will not use or share your\n                information with anyone except as described in this Privacy\n                Policy.\n            </p>\n            <p>\n                The terms used in this Privacy Policy have the same meanings as\n                in our Terms and Conditions, which is accessible at Admin LTE\n                unless otherwise defined in this Privacy Policy.\n            </p>\n            <p>\n                <strong>Information Collection and Use</strong>\n            </p>\n            <p>\n                For a better experience, while using our Service, I may require\n                you to provide us with certain personally identifiable\n                information. The information that I request will be retained on\n                your device and is not collected by me in any way.\n            </p>\n            <div>\n                <p>\n                    The app does use third party services that may collect\n                    information used to identify you.\n                </p>\n                <p>\n                    Link to privacy policy of third party service providers used\n                    by the app\n                </p>\n                <ul>\n                    <li>\n                        <a\n                            href=\"https://www.facebook.com/about/privacy/update/printable\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Facebook\n                        </a>\n                    </li>\n                </ul>\n            </div>\n            <p>\n                <strong>Log Data</strong>\n            </p>\n            <p>\n                I want to inform you that whenever you use my Service, in a case\n                of an error in the app I collect data and information (through\n                third party products) on your phone called Log Data. This Log\n                Data may include information such as your device Internet\n                Protocol (“IP”) address, device name, operating system version,\n                the configuration of the app when utilizing my Service, the time\n                and date of your use of the Service, and other statistics.\n            </p>\n            <p>\n                <strong>Cookies</strong>\n            </p>\n            <p>\n                Cookies are files with a small amount of data that are commonly\n                used as anonymous unique identifiers. These are sent to your\n                browser from the websites that you visit and are stored on your\n                device`&apos;`s internal memory.\n            </p>\n            <p>\n                This Service does not use these “cookies” explicitly. However,\n                the app may use third party code and libraries that use\n                “cookies” to collect information and improve their services. You\n                have the option to either accept or refuse these cookies and\n                know when a cookie is being sent to your device. If you choose\n                to refuse our cookies, you may not be able to use some portions\n                of this Service.\n            </p>\n            <p>\n                <strong>Service Providers</strong>\n            </p>\n            <p>\n                I may employ third-party companies and individuals due to the\n                following reasons:\n            </p>\n            <ul>\n                <li>To facilitate our Service;</li>\n                <li>To provide the Service on our behalf;</li>\n                <li>To perform Service-related services; or</li>\n                <li>To assist us in analyzing how our Service is used.</li>\n            </ul>\n            <p>\n                I want to inform users of this Service that these third parties\n                have access to your Personal Information. The reason is to\n                perform the tasks assigned to them on our behalf. However, they\n                are obligated not to disclose or use the information for any\n                other purpose.\n            </p>\n            <p>\n                <strong>Security</strong>\n            </p>\n            <p>\n                I value your trust in providing us your Personal Information,\n                thus we are striving to use commercially acceptable means of\n                protecting it. But remember that no method of transmission over\n                the internet, or method of electronic storage is 100% secure and\n                reliable, and I cannot guarantee its absolute security.\n            </p>\n            <p>\n                <strong>Links to Other Sites</strong>\n            </p>\n            <p>\n                This Service may contain links to other sites. If you click on a\n                third-party link, you will be directed to that site. Note that\n                these external sites are not operated by me. Therefore, I\n                strongly advise you to review the Privacy Policy of these\n                websites. I have no control over and assume no responsibility\n                for the content, privacy policies, or practices of any\n                third-party sites or services.\n            </p>\n            <p>\n                <strong>Children’s Privacy</strong>\n            </p>\n            <p>\n                These Services do not address anyone under the age of 13. I do\n                not knowingly collect personally identifiable information from\n                children under 13. In the case I discover that a child under 13\n                has provided me with personal information, I immediately delete\n                this from our servers. If you are a parent or guardian and you\n                are aware that your child has provided us with personal\n                information, please contact me so that I will be able to do\n                necessary actions.\n            </p>\n            <p>\n                <strong>Changes to This Privacy Policy</strong>\n            </p>\n            <p>\n                I may update our Privacy Policy from time to time. Thus, you are\n                advised to review this page periodically for any changes. I will\n                notify you of any changes by posting the new Privacy Policy on\n                this page.\n            </p>\n            <p>This policy is effective as of 2020-04-19</p>\n            <p>\n                <strong>Contact Us</strong>\n            </p>\n            <p>\n                If you have any questions or suggestions about my Privacy\n                Policy, do not hesitate to contact me at erdikose8@gmail.com.\n            </p>\n        </>\n    );\n};\n\nexport default PrivacyPolicy;\n","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst PublicRoute = ({children, isLoggedIn, ...rest}) => {\n    const isAuthenticated = isLoggedIn || localStorage.getItem('token');\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isAuthenticated ? (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            state: {from: location}\n                        }}\n                    />\n                ) : (\n                    children\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst PrivateRoute = ({children, isLoggedIn, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isLoggedIn ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport {HashRouter as Router, Switch} from 'react-router-dom';\nimport Main from '@modules/main/Main';\nimport Login from '@modules/login/Login';\nimport Register from '@modules/register/Register';\nimport ForgetPassword from '@modules/forgot-password/ForgotPassword';\nimport RecoverPassword from '@modules/recover-password/RecoverPassword';\nimport PrivacyPolicy from '@modules/privacy-policy/PrivacyPolicy';\n\nimport PublicRoute from './routes/PublicRoute';\nimport PrivateRoute from './routes/PrivateRoute';\n\nimport './App.scss';\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <PublicRoute exact path=\"/login\">\n                    <Login />\n                </PublicRoute>\n                <PublicRoute exact path=\"/register\">\n                    <Register />\n                </PublicRoute>\n                <PublicRoute exact path=\"/forgot-password\">\n                    <ForgetPassword />\n                </PublicRoute>\n                <PublicRoute exact path=\"/recover-password\">\n                    <RecoverPassword />\n                </PublicRoute>\n                <PublicRoute exact path=\"/privacy-policy\">\n                    <PrivacyPolicy />\n                </PublicRoute>\n                <PublicRoute exact path=\"/callback\">\n                    <h1>Callback</h1>\n                </PublicRoute>\n                <PrivateRoute path=\"/\">\n                    <Main />\n                </PrivateRoute>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\n\nimport translationEN from './locales/en/translation.json';\nimport translationTR from './locales/tr/translation.json';\nimport translationDE from './locales/de/translation.json';\nimport translationES from './locales/es/translation.json';\nimport translationFR from './locales/fr/translation.json';\n\n// the translations\nconst resources = {\n    en: {\n        translation: translationEN\n    },\n    tr: {\n        translation: translationTR\n    },\n    es: {\n        translation: translationES\n    },\n    fr: {\n        translation: translationFR\n    },\n    de: {\n        translation: translationDE\n    }\n};\n\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        },\n        react: {\n            wait: true\n        }\n    });\n\nexport default i18n;\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {toast} from 'react-toastify';\nimport App from '@app/App';\nimport store from '@store';\n\nimport './index.scss';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\ntoast.configure({\n    autoClose: 3000,\n    draggable: false,\n    position: 'top-right',\n    hideProgressBar: false,\n    newestOnTop: true,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnVisibilityChange: true,\n    pauseOnHover: true\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}